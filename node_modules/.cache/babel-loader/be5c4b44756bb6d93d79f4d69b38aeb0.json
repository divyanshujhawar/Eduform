{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\divya\\\\OneDrive\\\\Desktop\\\\P-465-565-Group10-LMS-Sprint-02\\\\P-465-565-Group10-LMS-Sprint-02\\\\eduform\\\\src\\\\sample.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles.css\";\n\nclass FieldForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      itemlist: [{\n        label: \"Two\",\n        id: \"2\",\n        enabled: true\n      }, {\n        label: \"Three\",\n        id: \"3\",\n        enabled: true\n      }, {\n        label: \"Four\",\n        id: \"4\",\n        enabled: true\n      }],\n      itemlist2: [],\n      itemsToBeRemovedFromList1: [],\n      itemsToBeRemovedFromList2: []\n    };\n\n    this.onChangeItemList1 = e => {\n      const {\n        itemlist,\n        itemsToBeRemovedFromList1\n      } = this.state;\n      const foundItem = itemlist.find(item => item.label == e.target.value);\n      let allItems = [...itemsToBeRemovedFromList1, foundItem]; //add item to the to be removed list\n\n      this.setState({\n        itemsToBeRemovedFromList1: [...allItems]\n      });\n    };\n\n    this.onChangeItemList2 = e => {\n      const {\n        itemlist2,\n        itemsToBeRemovedFromList2\n      } = this.state;\n      const foundItem = itemlist2.find(item => item.label == e.target.value); //check for duplicates\n\n      let allItems = [...itemsToBeRemovedFromList2, foundItem]; //add item to the to be removed list\n\n      this.setState({\n        itemsToBeRemovedFromList2: [...allItems]\n      });\n    };\n\n    this.handleadd = () => {\n      const {\n        itemlist,\n        itemsToBeRemovedFromList1,\n        itemlist2\n      } = this.state;\n      const idsOfToBeRemovedItems = itemsToBeRemovedFromList1.map(item => item.id);\n      const newItemList1 = itemlist.filter(item => !idsOfToBeRemovedItems.includes(item.id));\n      const newItemList2 = itemlist.filter(item => idsOfToBeRemovedItems.includes(item.id));\n      this.setState({ ...this.state,\n        itemlist: newItemList1,\n        itemlist2: [...itemlist2, ...newItemList2],\n        itemsToBeRemovedFromList1: []\n      });\n    };\n\n    this.handleremove = () => {\n      const {\n        itemlist,\n        itemsToBeRemovedFromList2,\n        itemlist2\n      } = this.state;\n      const idsOfToBeRemovedItems = itemsToBeRemovedFromList2.map(item => item.id);\n      const newItemList2 = itemlist2.filter(item => !idsOfToBeRemovedItems.includes(item.id));\n      const newItemList1 = itemlist2.filter(item => idsOfToBeRemovedItems.includes(item.id));\n      this.setState({ ...this.state,\n        itemlist: [...itemlist, ...newItemList1],\n        itemlist2: newItemList2,\n        itemsToBeRemovedFromList2: []\n      });\n    };\n  }\n\n  render() {\n    const {\n      itemlist,\n      itemlist2\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      className: \"custom-select\",\n      onChange: this.onChangeItemList1,\n      multiple: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }, itemlist && itemlist.map(item => /*#__PURE__*/React.createElement(\"option\", {\n      id: item.id,\n      value: item.label,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }\n    }, item.label))), /*#__PURE__*/React.createElement(\"select\", {\n      className: \"custom-select\",\n      onChange: this.onChangeItemList2,\n      multiple: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }\n    }, itemlist2 && itemlist2.map(item => /*#__PURE__*/React.createElement(\"option\", {\n      id: item.id,\n      value: item.label,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 15\n      }\n    }, item.label))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-2 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleadd,\n      class: \"btn btn-primary btn-block w-25 margin-bottom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-arrow-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }), \"Add\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleremove,\n      class: \"btn btn-primary btn-block w-25\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-arrow-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    }), \"Remove\")));\n  }\n\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render( /*#__PURE__*/React.createElement(FieldForm, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 17\n  }\n}), rootElement);\nexport default SVGFEDisplacementMapElement;","map":{"version":3,"sources":["C:/Users/divya/OneDrive/Desktop/P-465-565-Group10-LMS-Sprint-02/P-465-565-Group10-LMS-Sprint-02/eduform/src/sample.js"],"names":["React","ReactDOM","FieldForm","Component","state","itemlist","label","id","enabled","itemlist2","itemsToBeRemovedFromList1","itemsToBeRemovedFromList2","onChangeItemList1","e","foundItem","find","item","target","value","allItems","setState","onChangeItemList2","handleadd","idsOfToBeRemovedItems","map","newItemList1","filter","includes","newItemList2","handleremove","render","rootElement","document","getElementById","SVGFEDisplacementMapElement"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport \"./styles.css\";\r\n\r\nclass FieldForm extends React.Component {\r\n  state = {\r\n    itemlist: [\r\n      { label: \"Two\", id: \"2\", enabled: true },\r\n      { label: \"Three\", id: \"3\", enabled: true },\r\n      { label: \"Four\", id: \"4\", enabled: true }\r\n    ],\r\n    itemlist2: [],\r\n    itemsToBeRemovedFromList1: [],\r\n    itemsToBeRemovedFromList2: []\r\n  };\r\n\r\n  onChangeItemList1 = e => {\r\n    const { itemlist, itemsToBeRemovedFromList1 } = this.state;\r\n    const foundItem = itemlist.find(item => item.label == e.target.value);\r\n\r\n    let allItems = [...itemsToBeRemovedFromList1, foundItem];\r\n\r\n    //add item to the to be removed list\r\n    this.setState({\r\n      itemsToBeRemovedFromList1: [...allItems]\r\n    });\r\n  };\r\n\r\n  onChangeItemList2 = e => {\r\n    const { itemlist2, itemsToBeRemovedFromList2 } = this.state;\r\n    const foundItem = itemlist2.find(item => item.label == e.target.value);\r\n\r\n    //check for duplicates\r\n    let allItems = [...itemsToBeRemovedFromList2, foundItem];\r\n\r\n    //add item to the to be removed list\r\n    this.setState({\r\n      itemsToBeRemovedFromList2: [...allItems]\r\n    });\r\n  };\r\n\r\n  handleadd = () => {\r\n    const { itemlist, itemsToBeRemovedFromList1, itemlist2 } = this.state;\r\n    const idsOfToBeRemovedItems = itemsToBeRemovedFromList1.map(\r\n      item => item.id\r\n    );\r\n    const newItemList1 = itemlist.filter(\r\n      item => !idsOfToBeRemovedItems.includes(item.id)\r\n    );\r\n\r\n    const newItemList2 = itemlist.filter(item =>\r\n      idsOfToBeRemovedItems.includes(item.id)\r\n    );\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      itemlist: newItemList1,\r\n      itemlist2: [...itemlist2, ...newItemList2],\r\n      itemsToBeRemovedFromList1: []\r\n    });\r\n  };\r\n\r\n  handleremove = () => {\r\n    const { itemlist, itemsToBeRemovedFromList2, itemlist2 } = this.state;\r\n    const idsOfToBeRemovedItems = itemsToBeRemovedFromList2.map(\r\n      item => item.id\r\n    );\r\n    const newItemList2 = itemlist2.filter(\r\n      item => !idsOfToBeRemovedItems.includes(item.id)\r\n    );\r\n\r\n    const newItemList1 = itemlist2.filter(item =>\r\n      idsOfToBeRemovedItems.includes(item.id)\r\n    );\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      itemlist: [...itemlist, ...newItemList1],\r\n      itemlist2: newItemList2,\r\n      itemsToBeRemovedFromList2: []\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { itemlist, itemlist2 } = this.state;\r\n    return (\r\n      <div>\r\n        <select\r\n          className=\"custom-select\"\r\n          onChange={this.onChangeItemList1}\r\n          multiple\r\n        >\r\n          {itemlist &&\r\n            itemlist.map(item => (\r\n              <option id={item.id} value={item.label}>\r\n                {item.label}\r\n              </option>\r\n            ))}\r\n        </select>\r\n\r\n        <select\r\n          className=\"custom-select\"\r\n          onChange={this.onChangeItemList2}\r\n          multiple\r\n        >\r\n          {itemlist2 &&\r\n            itemlist2.map(item => (\r\n              <option id={item.id} value={item.label}>\r\n                {item.label}\r\n              </option>\r\n            ))}\r\n        </select>\r\n        <div className=\"col-md-2 \">\r\n          <button\r\n            onClick={this.handleadd}\r\n            class=\"btn btn-primary btn-block w-25 margin-bottom\"\r\n          >\r\n            <i class=\"fa fa-arrow-right\" />\r\n            Add\r\n          </button>\r\n          <button\r\n            onClick={this.handleremove}\r\n            class=\"btn btn-primary btn-block w-25\"\r\n          >\r\n            <i class=\"fa fa-arrow-left\" />\r\n            Remove\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(<FieldForm />, rootElement);\r\n\r\nexport default SVGFEDisplacementMapElement;"]},"metadata":{},"sourceType":"module"}