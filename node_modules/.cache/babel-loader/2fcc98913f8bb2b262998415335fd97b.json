{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\divya\\\\OneDrive\\\\Desktop\\\\Amplify\\\\Eduform\\\\src\\\\components\\\\admin\\\\VerifyUser.js\";\nimport React, { Component } from \"react\";\nimport { Row, Column } from 'react-foundation';\nimport AdminNavBar from './AdminNavBar.js';\nimport UserCard from './UserCard.js';\n\nclass VerifyUser extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      unverifiedUsers: []\n    };\n    this.getUnverifiedUsers = this.getUnverifiedUsers.bind(this);\n  }\n\n  componentDidMount() {\n    this.getUnverifiedUsers();\n  }\n\n  verify(email, role) {\n    console.log(email, role);\n    var isVerified = true;\n    var userUpdateRequest = {\n      role: role,\n      isVerified: isVerified\n    };\n\n    try {\n      const response = fetch('admin/updateUser/' + email, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify(userUpdateRequest)\n      }).then(res => res.text()).then(text => {\n        alert(text);\n        this.getUnverifiedUsers();\n        console.log(this.state.unverifiedUsers);\n      });\n    } catch (error) {\n      alert(error);\n    }\n  }\n\n  getUnverifiedUsers() {\n    try {\n      const response = fetch('/admin/getUnverifiedUsers', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        }\n      }).then(res => res.json()).then(jsonData => {\n        this.setState({\n          unverifiedUsers: jsonData.result\n        });\n      });\n    } catch (error) {\n      alert(error);\n    }\n  }\n\n  render() {\n    let userCards = this.state.unverifiedUsers.map(user => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"userCardColumn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Column, {\n        sm: \"4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(UserCard, {\n        key: personalbar.id,\n        verify: this.verify.bind(this),\n        user: user,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }\n      })));\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"backGroundSAT\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(AdminNavBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"userCardComponent\",\n      style: {\n        marginTop: '3%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    }, userCards)));\n  }\n\n}\n\n;\nexport default VerifyUser;","map":{"version":3,"sources":["C:/Users/divya/OneDrive/Desktop/Amplify/Eduform/src/components/admin/VerifyUser.js"],"names":["React","Component","Row","Column","AdminNavBar","UserCard","VerifyUser","constructor","props","state","unverifiedUsers","getUnverifiedUsers","bind","componentDidMount","verify","email","role","console","log","isVerified","userUpdateRequest","response","fetch","method","headers","body","JSON","stringify","then","res","text","alert","error","json","jsonData","setState","result","render","userCards","map","user","personalbar","id","marginTop"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,EAAcC,MAAd,QAA4B,kBAA5B;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,QAAP,MAAqB,eAArB;;AAGA,MAAMC,UAAN,SAAyBL,SAAzB,CAAmC;AAE/BM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,eAAe,EAAE;AADR,KAAb;AAIA,SAAKC,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBC,IAAxB,CAA6B,IAA7B,CAA1B;AACH;;AAEDC,EAAAA,iBAAiB,GAAE;AACf,SAAKF,kBAAL;AACH;;AAGDG,EAAAA,MAAM,CAACC,KAAD,EAAQC,IAAR,EAAc;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ,EAAmBC,IAAnB;AAEA,QAAIG,UAAU,GAAG,IAAjB;AACA,QAAIC,iBAAiB,GAAG;AACpBJ,MAAAA,IAAI,EAAEA,IADc;AAEpBG,MAAAA,UAAU,EAAEA;AAFQ,KAAxB;;AAKA,QAAI;AACA,YAAME,QAAQ,GAAGC,KAAK,CAAC,sBAAsBP,KAAvB,EAA8B;AAChDQ,QAAAA,MAAM,EAAE,KADwC;AAEhDC,QAAAA,OAAO,EAAE;AAAE,0BAAgB,kBAAlB;AAAsC,oBAAU;AAAhD,SAFuC;AAGhDC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,iBAAf;AAH0C,OAA9B,CAAL,CAKZQ,IALY,CAKPC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EALA,EAMZF,IANY,CAMPE,IAAI,IAAI;AAEVC,QAAAA,KAAK,CAACD,IAAD,CAAL;AACA,aAAKnB,kBAAL;AACAM,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAL,CAAWC,eAAvB;AAEH,OAZY,CAAjB;AAcH,KAfD,CAeE,OAAOsB,KAAP,EAAc;AACZD,MAAAA,KAAK,CAACC,KAAD,CAAL;AACH;AACJ;;AAEDrB,EAAAA,kBAAkB,GAAG;AAEjB,QAAI;AACA,YAAMU,QAAQ,GAAGC,KAAK,CAAC,2BAAD,EAA8B;AAChDC,QAAAA,MAAM,EAAE,KADwC;AAEhDC,QAAAA,OAAO,EAAE;AAAE,0BAAgB,kBAAlB;AAAsC,oBAAU;AAAhD;AAFuC,OAA9B,CAAL,CAIZI,IAJY,CAIPC,GAAG,IAAIA,GAAG,CAACI,IAAJ,EAJA,EAKZL,IALY,CAKPM,QAAQ,IAAI;AAGd,aAAKC,QAAL,CAAc;AACVzB,UAAAA,eAAe,EAAEwB,QAAQ,CAACE;AADhB,SAAd;AAIH,OAZY,CAAjB;AAcH,KAfD,CAeE,OAAOJ,KAAP,EAAc;AACZD,MAAAA,KAAK,CAACC,KAAD,CAAL;AACH;AAEJ;;AAEDK,EAAAA,MAAM,GAAG;AAEL,QAAIC,SAAS,GAAG,KAAK7B,KAAL,CAAWC,eAAX,CAA2B6B,GAA3B,CAA+BC,IAAI,IAAI;AACnD,0BACI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,QAAD;AAAU,QAAA,GAAG,EAAEC,WAAW,CAACC,EAA3B;AAA+B,QAAA,MAAM,EAAE,KAAK5B,MAAL,CAAYF,IAAZ,CAAiB,IAAjB,CAAvC;AAA+D,QAAA,IAAI,EAAE4B,IAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,CADJ;AAOH,KARe,CAAhB;AASA,wBACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,eAKI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAmC,MAAA,KAAK,EAAE;AAACG,QAAAA,SAAS,EAAE;AAAZ,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKL,SADL,CADJ,CALJ,CADJ;AAcH;;AA7F8B;;AA8FlC;AAED,eAAehC,UAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Row, Column } from 'react-foundation';\r\nimport AdminNavBar from './AdminNavBar.js';\r\nimport UserCard from './UserCard.js';\r\n\r\n\r\nclass VerifyUser extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            unverifiedUsers: []\r\n        }\r\n\r\n        this.getUnverifiedUsers = this.getUnverifiedUsers.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getUnverifiedUsers();\r\n    }\r\n\r\n\r\n    verify(email, role) {\r\n        console.log(email, role);\r\n\r\n        var isVerified = true;\r\n        var userUpdateRequest = {\r\n            role: role,\r\n            isVerified: isVerified\r\n        };\r\n\r\n        try {\r\n            const response = fetch('admin/updateUser/' + email, {\r\n                method: 'PUT',\r\n                headers: { 'Content-Type': 'application/json', 'Accept': 'application/json' },\r\n                body: JSON.stringify(userUpdateRequest)\r\n            })\r\n                .then(res => res.text())\r\n                .then(text => {\r\n\r\n                    alert(text);\r\n                    this.getUnverifiedUsers();\r\n                    console.log(this.state.unverifiedUsers);\r\n\r\n                });\r\n\r\n        } catch (error) {\r\n            alert(error);\r\n        }\r\n    }\r\n\r\n    getUnverifiedUsers() {\r\n\r\n        try {\r\n            const response = fetch('/admin/getUnverifiedUsers', {\r\n                method: 'GET',\r\n                headers: { 'Content-Type': 'application/json', 'Accept': 'application/json' },\r\n            })\r\n                .then(res => res.json())\r\n                .then(jsonData => {\r\n\r\n\r\n                    this.setState({\r\n                        unverifiedUsers: jsonData.result\r\n                    });\r\n\r\n                });\r\n\r\n        } catch (error) {\r\n            alert(error);\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        let userCards = this.state.unverifiedUsers.map(user => {\r\n            return (\r\n                <div className=\"userCardColumn\">\r\n                    <Column sm=\"4\">\r\n                        <UserCard key={personalbar.id} verify={this.verify.bind(this)} user={user} />\r\n                    </Column>\r\n                </div>\r\n            )\r\n        })\r\n        return (\r\n            <div className=\"backGroundSAT\">\r\n                <div >\r\n                    <AdminNavBar />\r\n                </div>\r\n\r\n                <div className=\"userCardComponent\" style={{marginTop: '3%'}}>\r\n                    <Row>\r\n                        {userCards}\r\n                    </Row>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default VerifyUser;"]},"metadata":{},"sourceType":"module"}