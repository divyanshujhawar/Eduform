{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\divya\\\\OneDrive\\\\Desktop\\\\Eduform\\\\eduform\\\\src\\\\components\\\\login\\\\confirmation.js\";\nimport React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport Bootstrap from '../../.././node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport Logo from '../.././assets/edLogo.png';\n\nconst validateForm = errors => {\n  let valid = true;\n  Object.values(errors).forEach( // if we have an error string, set valid to false\n  val => val.length > 0 && (valid = false));\n  return valid;\n};\n\nconst countErrors = errors => {\n  let count = 0;\n  Object.values(errors).forEach(val => val.length > 0 && (count = count + 1));\n  return count;\n};\n\nclass Confirmation extends Component {\n  constructor(props) {\n    super(props);\n\n    this.initialize = () => {\n      this.state.email = null;\n      this.state.password = null;\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      let vars = [\"email\"];\n      var i;\n\n      for (i = 0; i < vars.length; i++) {\n        if (document.getElementById(vars[i]).value.length === 0) {\n          this.state.errors[vars[i]] = \"Required\";\n        }\n      }\n\n      this.setState({\n        formValid: validateForm(this.state.errors)\n      });\n      this.setState({\n        errorCount: countErrors(this.state.errors)\n      });\n\n      if (this.state.errorCount === 0 && this.state.formValid) {\n        //alert(\"You are logged in!\");\n        console.log('Logged In'); //return <Redirect to = \"./sign-up\" />\n\n        return this.props.history.push('/ChangePassword'); //Initialize variables\n        //initialize()\n      }\n    };\n\n    this.handleChange = event => {\n      event.preventDefault();\n      this.state.errors[\"email\"] = \"\";\n      this.state.errors[\"password\"] = \"\";\n      const {\n        name,\n        value\n      } = event.target;\n      this.state[name] = value;\n    };\n\n    this.onButtonClick = event => {\n      event.preventDefault();\n    };\n\n    this.googleSignIn = () => {\n      console.log('Click!!!!');\n    };\n\n    this.state = {\n      email: null,\n      password: null,\n      confirmPassword: null,\n      formValid: false,\n      errorCount: 0,\n      errors: {\n        email: '',\n        password: '',\n        confirmPassword: ''\n      }\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  render() {\n    const {\n      errors\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: '390px'\n      },\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginTop: '55px'\n      },\n      className: \"row myIntro\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-5 col-md-7 bg-black myLogIn text-primarys\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      noValidate: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      style: {\n        width: '70px',\n        height: '70px'\n      },\n      src: Logo,\n      alt: \"edLogo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      style: {\n        paddingBottom: '10px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 29\n      }\n    }, \" Confirmation \"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 29\n      }\n    }, \" Please enter the new password \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"email\",\n      id: \"email\",\n      name: \"email\",\n      className: \"form-control\",\n      placeholder: \"Enter 5 Letter Code\",\n      style: {\n        fontSize: '.9rem'\n      },\n      onChange: this.handleChange,\n      noValidate: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 33\n      }\n    }), errors.email.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 61\n      }\n    }, errors.email)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      style: {\n        fontSize: '.9rem'\n      },\n      id: \"password\",\n      name: \"password\",\n      className: \"form-control\",\n      placeholder: \"Password\",\n      onChange: this.handleChange,\n      noValidate: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 33\n      }\n    }), errors.password.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 64\n      }\n    }, errors.password)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      style: {\n        fontSize: '.9rem'\n      },\n      id: \"confirmPassword\",\n      name: \"confirmPassword\",\n      className: \"form-control\",\n      placeholder: \"Confirm password\",\n      onChange: this.handleChange,\n      noValidate: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 33\n      }\n    }), errors.confirmPassword.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 71\n      }\n    }, errors.confirmPassword)), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      onChange: this.onButtonClick,\n      className: \"btn btn-block log\",\n      style: {\n        fontSize: '1.2rem',\n        backgroundColor: '#febf63',\n        marginBottom: '10px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 29\n      }\n    }, \"Check Code\"))))));\n  }\n\n}\n\nexport default withRouter(Confirmation);","map":{"version":3,"sources":["C:/Users/divya/OneDrive/Desktop/Eduform/eduform/src/components/login/confirmation.js"],"names":["React","Component","withRouter","Bootstrap","Logo","validateForm","errors","valid","Object","values","forEach","val","length","countErrors","count","Confirmation","constructor","props","initialize","state","email","password","handleSubmit","event","preventDefault","vars","i","document","getElementById","value","setState","formValid","errorCount","console","log","history","push","handleChange","name","target","onButtonClick","googleSignIn","confirmPassword","bind","render","height","marginTop","width","paddingBottom","fontSize","backgroundColor","marginBottom"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport Bootstrap from '../../.././node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport Logo from '../.././assets/edLogo.png';\n\nconst validateForm = (errors) => {\n    let valid = true\n    Object.values(errors).forEach(\n    // if we have an error string, set valid to false\n    (val) => val.length > 0 && (valid = false)\n    );\n    return valid;\n}\n\nconst countErrors = (errors) => {\n    let count = 0;\n    Object.values(errors).forEach(\n      (val) => val.length > 0 && (count = count+1)\n    );\n    return count;\n}\n\n\nclass Confirmation extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: null,\n            password: null,\n            confirmPassword: null,\n            formValid: false,\n            errorCount: 0,\n            errors:{\n                email: '',\n                password: '',\n                confirmPassword: ''\n            }\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    initialize = () => {\n        this.state.email = null;\n        this.state.password = null;\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n\n        let vars = [\"email\"];\n\n        var i;\n        for (i = 0; i < vars.length; i++) {\n\n            if(document.getElementById(vars[i]).value.length === 0){\n                this.state.errors[vars[i]] = \"Required\";\n            }\n\n        }\n\n        this.setState({formValid: validateForm(this.state.errors)});\n        this.setState({errorCount: countErrors(this.state.errors)});\n\n\n        if (this.state.errorCount === 0 && this.state.formValid){\n\n            //alert(\"You are logged in!\");\n            console.log('Logged In');\n\n            //return <Redirect to = \"./sign-up\" />\n\n            return this.props.history.push('/ChangePassword');\n\n            //Initialize variables\n            //initialize()\n        }\n    }\n\n    handleChange = (event) => {\n\n        event.preventDefault();\n\n\n        this.state.errors[\"email\"] = \"\";\n        this.state.errors[\"password\"] = \"\";\n\n        const { name, value } = event.target;\n\n        this.state[name] = value\n\n    }\n\n    onButtonClick = (event) =>\n    {\n      event.preventDefault();\n    }\n\n    googleSignIn = () => {\n        console.log('Click!!!!');\n     }\n\n    render() {\n        const {errors} = this.state;\n        return (\n            <div className=\"App2\">\n                <div style={{height: '390px'}} className=\"container\">\n                    <div style={{marginTop: '55px'}} className=\"row myIntro\">\n                    <div className=\"col-lg-5 col-md-7 bg-black myLogIn text-primarys\">\n                        <form onSubmit={this.handleSubmit} noValidate>\n                            <img style={{width: '70px', height: '70px'}} src={Logo} alt=\"edLogo\"/>\n                            <h1 style={{paddingBottom: '10px'}}> Confirmation </h1>\n                            <p> Please enter the new password </p>\n\n                            <div className=\"form-group\">\n                                <input type= \"email\" id=\"email\" name=\"email\" className=\"form-control\" placeholder=\"Enter 5 Letter Code\" style={{fontSize: '.9rem'}} onChange={this.handleChange} noValidate/>\n                                {errors.email.length > 0 && <span className='error'>{errors.email}</span>}\n                            </div>\n\n                            <div className=\"form-group\">\n                                <input type=\"password\" style={{fontSize: '.9rem'}} id=\"password\" name=\"password\" className=\"form-control\" placeholder=\"Password\" onChange={this.handleChange} noValidate/>\n                                {errors.password.length > 0 && <span className='error'>{errors.password}</span>}\n                            </div>\n\n                            <div className=\"form-group\">\n                                <input type=\"password\" style={{fontSize: '.9rem'}} id=\"confirmPassword\" name=\"confirmPassword\" className=\"form-control\" placeholder=\"Confirm password\" onChange={this.handleChange} noValidate/>\n                                {errors.confirmPassword.length > 0 && <span className='error'>{errors.confirmPassword}</span>}\n                            </div>\n\n                            <button type=\"submit\" onChange={this.onButtonClick} className=\"btn btn-block log\" style={{fontSize: '1.2rem', backgroundColor: '#febf63', marginBottom: '10px'}}>Check Code</button>\n                        </form>\n                        </div>\n                        </div>\n                    </div>\n            </div>\n\n        );\n  }\n}\n\nexport default withRouter(Confirmation);\n"]},"metadata":{},"sourceType":"module"}