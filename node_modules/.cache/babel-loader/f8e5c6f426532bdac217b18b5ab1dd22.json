{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\divya\\\\OneDrive\\\\Desktop\\\\Eduform\\\\eduform\\\\src\\\\components\\\\login\\\\register.js\";\nimport React, { Component } from \"react\";\nimport Logo from '../.././assets/edLogo.png';\nimport { Link } from \"react-router-dom\";\nconst validEmailRegex = RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i);\nconst validPhoneRegex = RegExp(/^\\d+$/i);\nconst roleOptions = ['admin', 'teacher', 'student'];\n\nconst validateForm = errors => {\n  let valid = true;\n  Object.values(errors).forEach( // if we have an error string, set valid to false\n  val => val.length > 0 && (valid = false));\n  return valid;\n};\n\nconst countErrors = errors => {\n  let count = 0;\n  Object.values(errors).forEach(val => val.length > 0 && (count = count + 1));\n  return count;\n};\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      event.preventDefault();\n      const {\n        name,\n        value\n      } = event.target;\n      let errors = this.state.errors; //this.setState({name: document.getElementById(name).value});\n\n      this.state[name] = value;\n\n      switch (name) {\n        case 'firstName':\n          errors.firstName = value.length === 0 ? 'First name cannot be empty' : '';\n          break;\n\n        case 'lastName':\n          errors.lastName = value.length === 0 ? 'Last name cannot be empty' : '';\n          break;\n\n        case 'email':\n          errors.email = validEmailRegex.test(value) ? '' : 'Email is not valid';\n          break;\n\n        case 'phone':\n          errors.phone = value.length === 10 && validPhoneRegex.test(value) ? '' : 'Invalid phone number';\n          break;\n\n        case 'role':\n          errors.role = value.length === 0 ? 'Role cannot be empty' : '';\n          break;\n\n        case 'password':\n          errors.password = value.length < 8 ? 'Password must be atleast 8 characters long' : '';\n\n          if (errors.password === '' && document.getElementById(\"password\").value === document.getElementById(\"confirmPassword\").value) {\n            errors.confirmPassword = '';\n          } else {\n            errors.confirmPassword = 'Passwords do not match';\n          }\n\n          break;\n\n        case 'confirmPassword':\n          errors.confirmPassword = value !== document.getElementById(\"password\").value ? 'Passwords do not match' : '';\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        errors,\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.setState({\n        firstName: document.getElementById(\"first-name\").value\n      });\n      this.setState({\n        lastName: document.getElementById(\"last-name\").value\n      });\n      this.setState({\n        email: document.getElementById(\"email\").value\n      });\n      this.setState({\n        phone: document.getElementById(\"phone\").value\n      });\n      this.setState({\n        role: document.getElementById(\"role\").value\n      });\n      this.setState({\n        password: document.getElementById(\"password\").value\n      });\n      this.setState({\n        confirmPassword: document.getElementById(\"confirmPassword\").value\n      });\n      let vars = [\"first-name\", \"last-name\", \"email\", \"phone\", \"role\", \"password\", \"confirmPassword\"];\n      var i;\n      let errorCount = 0;\n\n      for (i = 0; i < vars.length; i++) {\n        if (document.getElementById(vars[i]).value.length === 0) {\n          this.state.errors[vars[i]] = \"This cannot be empty\";\n          errorCount += 1;\n        }\n      }\n\n      if (errorCount > 0) {\n        return;\n      } else {\n        alert(\"Verfication email has been sent. Kindly verify it!\");\n        this.registerUser(event);\n        return this.props.history.push('/sign-in');\n      }\n    };\n\n    this.state = {\n      user: {},\n      firstName: null,\n      lastName: null,\n      email: null,\n      phone: null,\n      role: null,\n      password: null,\n      confirmPassword: null,\n      errors: {\n        firstName: '',\n        lastName: '',\n        email: '',\n        phone: '',\n        role: '',\n        password: '',\n        confirmPassword: ''\n      }\n    };\n  }\n\n  async registerUser(event) {\n    event.preventDefault();\n    this.state.user.firstName = this.state.firstName;\n    this.state.user.lastName = this.state.lastName;\n    this.state.user.email = this.state.email;\n    this.state.user.phoneNumber = parseInt(this.state.phone, 10);\n    this.state.user.role = this.state.role;\n    this.state.user.password = this.state.password;\n\n    try {\n      const response = await fetch('/user/registration', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify(this.state.user)\n      });\n      console.log(response.text());\n      console.log(response.results);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  render() {\n    const {\n      errors,\n      formValid\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        paddingTop: '4%',\n        paddingBottom: '2%'\n      },\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        paddingRight: '2%',\n        paddingLeft: '2%'\n      },\n      className: \"row myIntro\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        padding: '0% 3% 1% 3%'\n      },\n      className: \"col-lg-5 col-md-7 bg-black myLogIn text-primarys\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      noValidate: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      style: {\n        width: '70px',\n        height: '70px',\n        marginTop: '1.5%'\n      },\n      src: Logo,\n      alt: \"edLogo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"welcome\",\n      style: {\n        marginTop: '1.5%',\n        fontSize: '2.5rem',\n        paddingBottom: '10px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 21\n      }\n    }, \" Register for EduForm! \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      style: {\n        fontSize: '.9rem'\n      },\n      id: \"first-name\",\n      name: \"firstName\",\n      className: \"form-control\",\n      placeholder: \"First name\",\n      onChange: this.handleChange,\n      noValidate: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 33\n      }\n    }), errors.firstName.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 65\n      }\n    }, errors.firstName)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      style: {\n        fontSize: '.9rem'\n      },\n      id: \"last-name\",\n      name: \"lastName\",\n      className: \"form-control\",\n      placeholder: \"Last name\",\n      onChange: this.handleChange,\n      noValidate: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 33\n      }\n    }), errors.lastName.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 64\n      }\n    }, errors.lastName)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"email\",\n      style: {\n        fontSize: '.9rem'\n      },\n      id: \"email\",\n      name: \"email\",\n      className: \"form-control\",\n      placeholder: \"Email Address\",\n      onChange: this.handleChange,\n      noValidate: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 33\n      }\n    }), errors.email.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 61\n      }\n    }, errors.email)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"phone\",\n      style: {\n        fontSize: '.9rem'\n      },\n      id: \"phone\",\n      name: \"phone\",\n      className: \"form-control\",\n      placeholder: \"Phone Number\",\n      onChange: this.handleChange,\n      noValidate: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 33\n      }\n    }), errors.phone.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 61\n      }\n    }, errors.phone)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      style: {\n        fontSize: '.9rem'\n      },\n      id: \"role\",\n      name: \"role\",\n      className: \"form-control\",\n      placeholder: \"Role(a/t/s)\",\n      onChange: this.handleChange,\n      noValidate: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 33\n      }\n    }), errors.role.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 60\n      }\n    }, errors.role)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      style: {\n        fontSize: '.9rem'\n      },\n      id: \"password\",\n      name: \"password\",\n      className: \"form-control\",\n      placeholder: \"Password\",\n      onChange: this.handleChange,\n      noValidate: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 33\n      }\n    }), errors.password.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 64\n      }\n    }, errors.password)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      style: {\n        fontSize: '.9rem'\n      },\n      id: \"confirmPassword\",\n      name: \"confirmPassword\",\n      className: \"form-control\",\n      placeholder: \"Confirm password\",\n      onChange: this.handleChange,\n      noValidate: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 33\n      }\n    }), errors.confirmPassword.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 71\n      }\n    }, errors.confirmPassword)), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-block log\",\n      style: {\n        fontSize: '1.2rem',\n        backgroundColor: '#febf63'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 29\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 139\n      }\n    }, \" Register \")), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"forgot-password text-left\",\n      style: {\n        paddingTop: '2.5%',\n        paddingBottom: '.5%',\n        fontSize: '1.1rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 29\n      }\n    }, \"Already registered? \", /*#__PURE__*/React.createElement(Link, {\n      to: \"./sign-in\",\n      style: {\n        color: '#febf63'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 53\n      }\n    }, \"Sign In\")))))));\n  } //{this.state.errorCount !== null ? <p className=\"form-status\">Form is {formValid ? 'valid ✅' : 'invalid ❌'}</p> : 'Form not submitted'}\n\n\n}\n\nexport default Register;","map":{"version":3,"sources":["C:/Users/divya/OneDrive/Desktop/Eduform/eduform/src/components/login/register.js"],"names":["React","Component","Logo","Link","validEmailRegex","RegExp","validPhoneRegex","roleOptions","validateForm","errors","valid","Object","values","forEach","val","length","countErrors","count","Register","constructor","props","handleChange","event","preventDefault","name","value","target","state","firstName","lastName","email","test","phone","role","password","document","getElementById","confirmPassword","setState","handleSubmit","vars","i","errorCount","alert","registerUser","history","push","user","phoneNumber","parseInt","response","fetch","method","headers","body","JSON","stringify","console","log","text","results","error","render","formValid","paddingTop","paddingBottom","paddingRight","paddingLeft","padding","width","height","marginTop","fontSize","backgroundColor","color"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Logo from '../.././assets/edLogo.png';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst validEmailRegex = RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i);\r\n\r\nconst validPhoneRegex = RegExp(/^\\d+$/i);\r\n\r\nconst roleOptions = ['admin', 'teacher', 'student'];\r\n\r\nconst validateForm = (errors) => {\r\n    let valid = true;\r\n    Object.values(errors).forEach(\r\n    // if we have an error string, set valid to false\r\n    (val) => val.length > 0 && (valid = false)\r\n    );\r\n    return valid;\r\n}\r\n\r\nconst countErrors = (errors) => {\r\n    let count = 0;\r\n    Object.values(errors).forEach(\r\n      (val) => val.length > 0 && (count = count+1)\r\n    );\r\n    return count;\r\n}\r\n\r\n\r\nclass Register extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: {},\r\n            firstName: null,\r\n            lastName: null,\r\n            email: null,\r\n            phone: null,\r\n            role: null,\r\n            password: null,\r\n            confirmPassword: null,\r\n            errors: {\r\n                firstName: '',\r\n                lastName: '',\r\n                email: '',\r\n                phone: '',\r\n                role: '',\r\n                password: '',\r\n                confirmPassword: '',\r\n          }\r\n        };\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        event.preventDefault();\r\n        \r\n        const { name, value } = event.target;\r\n        let errors = this.state.errors;\r\n\r\n        //this.setState({name: document.getElementById(name).value});\r\n        this.state[name] = value;\r\n\r\n        switch (name) {\r\n\r\n            case 'firstName': \r\n                errors.firstName = \r\n                value.length === 0\r\n                    ? 'First name cannot be empty'\r\n                    : '';\r\n                break;\r\n            case 'lastName': \r\n                errors.lastName = \r\n                  value.length === 0\r\n                    ? 'Last name cannot be empty'\r\n                    : '';\r\n                break;\r\n            case 'email': \r\n                errors.email = \r\n                validEmailRegex.test(value)\r\n                    ? ''\r\n                    : 'Email is not valid';\r\n                break;\r\n            case 'phone': \r\n                errors.phone = \r\n                (value.length === 10 && (validPhoneRegex.test(value)))\r\n                    ? ''\r\n                    : 'Invalid phone number';\r\n                break;\r\n            case 'role': \r\n                errors.role = \r\n                    value.length === 0 \r\n                    ? 'Role cannot be empty'\r\n                    : '';\r\n                break;\r\n            case 'password': \r\n                errors.password = \r\n                value.length < 8\r\n                    ? 'Password must be atleast 8 characters long'\r\n                    : '';\r\n                if(errors.password === '' && document.getElementById(\"password\").value === document.getElementById(\"confirmPassword\").value){\r\n                    errors.confirmPassword = '';\r\n                } else{\r\n                    errors.confirmPassword = 'Passwords do not match';\r\n                }\r\n \r\n                break;\r\n            \r\n            case 'confirmPassword': \r\n                errors.confirmPassword = \r\n                value !== document.getElementById(\"password\").value\r\n                    ? 'Passwords do not match'\r\n                    : '';\r\n                break;\r\n            \r\n            default:\r\n                break;\r\n        }\r\n      \r\n        this.setState({errors, [name]: value});\r\n\r\n    }\r\n\r\n    async registerUser(event){\r\n\r\n        event.preventDefault();\r\n\r\n        this.state.user.firstName = this.state.firstName;\r\n        this.state.user.lastName = this.state.lastName;\r\n        this.state.user.email = this.state.email;\r\n        this.state.user.phoneNumber = parseInt(this.state.phone, 10);\r\n        this.state.user.role = this.state.role;\r\n        this.state.user.password = this.state.password;\r\n        \r\n        try{\r\n            const response = await fetch('/user/registration', {\r\n                method: 'POST',\r\n                headers: {'Content-Type': 'application/json','Accept': 'application/json'},\r\n                body: JSON.stringify(this.state.user)\r\n            })\r\n            console.log(response.text());\r\n            console.log(response.results);\r\n\r\n        } catch (error){\r\n            console.log(error);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n\r\n        event.preventDefault();\r\n\r\n        this.setState({firstName: document.getElementById(\"first-name\").value});\r\n        this.setState({lastName: document.getElementById(\"last-name\").value});\r\n        this.setState({email: document.getElementById(\"email\").value});\r\n        this.setState({phone: document.getElementById(\"phone\").value});\r\n        this.setState({role: document.getElementById(\"role\").value});\r\n        this.setState({password: document.getElementById(\"password\").value});\r\n        this.setState({confirmPassword: document.getElementById(\"confirmPassword\").value});\r\n        \r\n        let vars = [\"first-name\",\"last-name\",\"email\",\"phone\",\"role\",\"password\",\"confirmPassword\"];\r\n        \r\n        var i;\r\n        let errorCount = 0;\r\n        for (i = 0; i < vars.length; i++) {\r\n\r\n            if(document.getElementById(vars[i]).value.length === 0){\r\n                this.state.errors[vars[i]] = \"This cannot be empty\";\r\n                errorCount += 1;\r\n            }\r\n        }\r\n\r\n        if (errorCount>0){\r\n            return;\r\n        } else{\r\n            alert(\"Verfication email has been sent. Kindly verify it!\");\r\n\r\n            this.registerUser(event);\r\n\r\n            return this.props.history.push('/sign-in');\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        const {errors, formValid} = this.state;\r\n        return (\r\n        <div className=\"App2\">\r\n            <div style={{paddingTop: '4%', paddingBottom: '2%'}} className=\"container\">\r\n                <div style={{paddingRight: '2%', paddingLeft: '2%'}} className=\"row myIntro\">\r\n                <div style={{padding: '0% 3% 1% 3%'}} className=\"col-lg-5 col-md-7 bg-black myLogIn text-primarys\">\r\n                    <form onSubmit={this.handleSubmit} noValidate>\r\n                    <img style={{width: '70px', height: '70px', marginTop: '1.5%'}} src={Logo} alt=\"edLogo\"/>\r\n                    <h1 className=\"welcome\" style={{marginTop: '1.5%', fontSize: '2.5rem', paddingBottom: '10px'}}> Register for EduForm! </h1>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" style={{fontSize: '.9rem'}} id=\"first-name\" name=\"firstName\" className=\"form-control\" placeholder=\"First name\" onChange={this.handleChange} noValidate/>\r\n                                {errors.firstName.length > 0 && <span className='error'>{errors.firstName}</span>}\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" style={{fontSize: '.9rem'}} id=\"last-name\" name=\"lastName\" className=\"form-control\" placeholder=\"Last name\" onChange={this.handleChange} noValidate/>\r\n                                {errors.lastName.length > 0 && <span className='error'>{errors.lastName}</span>}\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <input type=\"email\" style={{fontSize: '.9rem'}} id=\"email\" name=\"email\" className=\"form-control\" placeholder=\"Email Address\" onChange={this.handleChange} noValidate/>\r\n                                {errors.email.length > 0 && <span className='error'>{errors.email}</span>}\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <input type=\"phone\" style={{fontSize: '.9rem'}} id=\"phone\" name=\"phone\" className=\"form-control\" placeholder=\"Phone Number\" onChange={this.handleChange} noValidate/>\r\n                                {errors.phone.length > 0 && <span className='error'>{errors.phone}</span>}\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" style={{fontSize: '.9rem'}} id=\"role\" name=\"role\" className=\"form-control\" placeholder=\"Role(a/t/s)\" onChange={this.handleChange} noValidate/>\r\n                                {errors.role.length > 0 && <span className='error'>{errors.role}</span>}\r\n                            </div>\r\n\r\n\r\n                            <div className=\"form-group\">\r\n                                <input type=\"password\" style={{fontSize: '.9rem'}} id=\"password\" name=\"password\" className=\"form-control\" placeholder=\"Password\" onChange={this.handleChange} noValidate/>\r\n                                {errors.password.length > 0 && <span className='error'>{errors.password}</span>}\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <input type=\"password\" style={{fontSize: '.9rem'}} id=\"confirmPassword\" name=\"confirmPassword\" className=\"form-control\" placeholder=\"Confirm password\" onChange={this.handleChange} noValidate/>\r\n                                {errors.confirmPassword.length > 0 && <span className='error'>{errors.confirmPassword}</span>}\r\n                            </div>\r\n\r\n                            <button type=\"submit\" className=\"btn btn-block log\" style={{fontSize: '1.2rem', backgroundColor: '#febf63'}}> <b> Register </b></button>\r\n\r\n                            <p className=\"forgot-password text-left\" style={{paddingTop: '2.5%',paddingBottom: '.5%', fontSize: '1.1rem'}}>\r\n                                Already registered? <Link to=\"./sign-in\" style={{color: '#febf63'}}>Sign In</Link>\r\n                            </p>\r\n                    </form>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n//{this.state.errorCount !== null ? <p className=\"form-status\">Form is {formValid ? 'valid ✅' : 'invalid ❌'}</p> : 'Form not submitted'}\r\n}\r\n\r\n\r\nexport default Register;\r\n"]},"metadata":{},"sourceType":"module"}