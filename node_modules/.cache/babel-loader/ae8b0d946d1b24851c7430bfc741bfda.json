{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\divya\\\\OneDrive\\\\Desktop\\\\Amplify\\\\Eduform\\\\src\\\\components\\\\student\\\\UpcomingAssignmentInfoBlocks.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route, Link } from \"react-router-dom\";\nimport Bootstrap from '../../.././node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport Semantic from 'semantic-ui-css/semantic.min.css';\nimport Personal from '../../assets/cat.jpg';\nimport Logo from '../.././assets/edLogo.png';\n\nclass UpcomingAssignmentInfoBlocks extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // Query here specifically by due_date, if due_date matches the selectedDate below. Doing a makeshift query in render()\n      // below with an if statement.\n      //IF we don't do this, also okay, just put all assignment JSON info here.\n      // IF you do, then remove the if statement form inside the render() portion.\n      selectedDate: this.props.datePass,\n      assignments: [{\n        assign_id: 1009,\n        course_id: 23,\n        user_id: 2,\n        course_code: 'CS3440',\n        teacher_email: 'd',\n        filename: 'Lab 7',\n        max_points: '120',\n        creation_date: 's',\n        due_date: '11/05/2020',\n        assignment_path: 'Computer Engineering'\n      }, {\n        assign_id: 1007,\n        course_id: 56,\n        user_id: 2,\n        course_code: 'CS1990',\n        teacher_email: 'd',\n        filename: 'Assignment 3',\n        max_points: '75',\n        creation_date: 's',\n        due_date: '11/06/2020',\n        assignment_path: 'Object Oriented Programming'\n      }, {\n        assign_id: 1006,\n        course_id: 11,\n        user_id: 2,\n        course_code: 'CS2771',\n        teacher_email: 'd',\n        filename: 'Assignment 5',\n        max_points: '25',\n        creation_date: 's',\n        due_date: '11/13/2020',\n        assignment_path: 'Software Engineering I'\n      }, {\n        assign_id: 1005,\n        course_id: 11,\n        user_id: 2,\n        course_code: 'CS2771',\n        teacher_email: 'd',\n        filename: 'Milestone 3',\n        max_points: '150',\n        creation_date: 's',\n        due_date: '11/12/2020',\n        assignment_path: 'Software Engineering I'\n      }, {\n        assign_id: 1004,\n        course_id: 4,\n        user_id: 2,\n        course_code: 'CS2432',\n        teacher_email: 'd',\n        filename: 'Midterm',\n        max_points: '100',\n        creation_date: 's',\n        due_date: '11/05/2020',\n        assignment_path: 'Big Data'\n      }, {\n        assign_id: 1003,\n        course_id: 12,\n        user_id: 2,\n        course_code: 'CS2145',\n        teacher_email: 'd',\n        filename: 'Assignment 6',\n        max_points: '200',\n        creation_date: 's',\n        due_date: '11/03/2020',\n        assignment_path: 'Database Concepts'\n      }, {\n        assign_id: 1002,\n        course_id: 6,\n        user_id: 2,\n        course_code: 'CS1111',\n        teacher_email: 'divyanshu@iu.edu',\n        filename: 'Lab 6',\n        max_points: '100',\n        creation_date: 's',\n        due_date: '11/03/2020',\n        assignment_path: 'Intro to Computer Science'\n      }, {\n        assign_id: 1001,\n        course_id: 6,\n        user_id: 2,\n        course_code: 'CS1111',\n        teacher_email: 'divyanshu@iu.edu',\n        filename: 'Assignment 5',\n        max_points: '150',\n        creation_date: '2020-11-01',\n        due_date: '11/10/2020',\n        assignment_path: 'Intro to Computer Science'\n      }]\n    };\n  }\n\n  render() {\n    const upcoming = [];\n    var i = 0;\n\n    for (i; i < this.state.assignments.length; i++) {\n      if (this.state.assignments[i].due_date === this.state.selectedDate) {\n        upcoming.push( /*#__PURE__*/React.createElement(\"div\", {\n          class: \"item\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 10\n          }\n        }, /*#__PURE__*/React.createElement(\"h3\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 11\n          }\n        }, \" \", this.state.assignments[i].filename, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n          class: \"content\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          class: \"header\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }\n        }, \" \", this.state.assignments[i].assignment_path, \" - \", this.state.assignments[i].course_code, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            fontSize: '.9rem'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }\n        }, \" Due: \", this.state.assignments[i].due_date, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            fontSize: '.9rem'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }\n        }, \" \", this.state.assignments[i].max_points, \" pts \"))));\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      class: \"ui celled list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }\n    }, upcoming);\n  }\n\n}\n\nexport default UpcomingAssignmentInfoBlocks;","map":{"version":3,"sources":["C:/Users/divya/OneDrive/Desktop/Amplify/Eduform/src/components/student/UpcomingAssignmentInfoBlocks.js"],"names":["React","ReactDOM","BrowserRouter","Route","Link","Bootstrap","Semantic","Personal","Logo","UpcomingAssignmentInfoBlocks","Component","constructor","props","state","selectedDate","datePass","assignments","assign_id","course_id","user_id","course_code","teacher_email","filename","max_points","creation_date","due_date","assignment_path","render","upcoming","i","length","push","fontSize"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter, Route, Link } from \"react-router-dom\";\r\nimport Bootstrap from '../../.././node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport Semantic from 'semantic-ui-css/semantic.min.css';\r\nimport Personal from '../../assets/cat.jpg';\r\nimport Logo from '../.././assets/edLogo.png';\r\n\r\nclass UpcomingAssignmentInfoBlocks extends React.Component {\r\n\r\n  constructor(props)\r\n  {\r\n    super(props);\r\n\r\n    this.state = {\r\n      // Query here specifically by due_date, if due_date matches the selectedDate below. Doing a makeshift query in render()\r\n      // below with an if statement.\r\n      //IF we don't do this, also okay, just put all assignment JSON info here.\r\n      // IF you do, then remove the if statement form inside the render() portion.\r\n        selectedDate : this.props.datePass,\r\n        assignments: [\r\n          {\r\n            assign_id: 1009,\r\n            course_id: 23,\r\n            user_id: 2,\r\n            course_code: 'CS3440',\r\n            teacher_email: 'd',\r\n            filename: 'Lab 7',\r\n            max_points: '120',\r\n            creation_date: 's',\r\n            due_date: '11/05/2020',\r\n            assignment_path : 'Computer Engineering'\r\n          },\r\n          {\r\n            assign_id: 1007,\r\n            course_id: 56,\r\n            user_id: 2,\r\n            course_code: 'CS1990',\r\n            teacher_email: 'd',\r\n            filename: 'Assignment 3',\r\n            max_points: '75',\r\n            creation_date: 's',\r\n            due_date: '11/06/2020',\r\n            assignment_path : 'Object Oriented Programming'\r\n          },\r\n          {\r\n            assign_id: 1006,\r\n            course_id: 11,\r\n            user_id: 2,\r\n            course_code: 'CS2771',\r\n            teacher_email: 'd',\r\n            filename: 'Assignment 5',\r\n            max_points: '25',\r\n            creation_date: 's',\r\n            due_date: '11/13/2020',\r\n            assignment_path : 'Software Engineering I'\r\n          },\r\n          {\r\n            assign_id: 1005,\r\n            course_id: 11,\r\n            user_id: 2,\r\n            course_code: 'CS2771',\r\n            teacher_email: 'd',\r\n            filename: 'Milestone 3',\r\n            max_points: '150',\r\n            creation_date: 's',\r\n            due_date: '11/12/2020',\r\n            assignment_path : 'Software Engineering I'\r\n          },\r\n          {\r\n            assign_id: 1004,\r\n            course_id: 4,\r\n            user_id: 2,\r\n            course_code: 'CS2432',\r\n            teacher_email: 'd',\r\n            filename: 'Midterm',\r\n            max_points: '100',\r\n            creation_date: 's',\r\n            due_date: '11/05/2020',\r\n            assignment_path : 'Big Data'\r\n          },\r\n          {\r\n            assign_id: 1003,\r\n            course_id: 12,\r\n            user_id: 2,\r\n            course_code: 'CS2145',\r\n            teacher_email: 'd',\r\n            filename: 'Assignment 6',\r\n            max_points: '200',\r\n            creation_date: 's',\r\n            due_date: '11/03/2020',\r\n            assignment_path : 'Database Concepts'\r\n          },\r\n          {\r\n            assign_id: 1002,\r\n            course_id: 6,\r\n            user_id: 2,\r\n            course_code: 'CS1111',\r\n            teacher_email: 'divyanshu@iu.edu',\r\n            filename: 'Lab 6',\r\n            max_points: '100',\r\n            creation_date: 's',\r\n            due_date: '11/03/2020',\r\n            assignment_path : 'Intro to Computer Science'\r\n          },\r\n          {\r\n            assign_id: 1001,\r\n            course_id: 6,\r\n            user_id: 2,\r\n            course_code: 'CS1111',\r\n            teacher_email: 'divyanshu@iu.edu',\r\n            filename: 'Assignment 5',\r\n            max_points: '150',\r\n            creation_date: '2020-11-01',\r\n            due_date: '11/10/2020',\r\n            assignment_path : 'Intro to Computer Science'\r\n          }\r\n        ]\r\n    }\r\n  }\r\n\r\n  render(){\r\n\r\n  const upcoming = [];\r\n   var i = 0;\r\n   for(i; i < this.state.assignments.length; i++){\r\n     if(this.state.assignments[i].due_date === this.state.selectedDate)\r\n     {\r\n       upcoming.push(\r\n         <div class=\"item\">\r\n          <h3> {this.state.assignments[i].filename} </h3>\r\n          <div class=\"content\">\r\n            <div class=\"header\"> {this.state.assignments[i].assignment_path} - {this.state.assignments[i].course_code} </div>\r\n            <p style={{fontSize: '.9rem'}}> Due: {this.state.assignments[i].due_date} </p>\r\n            <p style={{fontSize: '.9rem'}}> {this.state.assignments[i].max_points} pts </p>\r\n          </div>\r\n        </div>\r\n      );\r\n     }\r\n   }\r\n\r\n      return(\r\n        <div class=\"ui celled list\">\r\n          {upcoming}\r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default UpcomingAssignmentInfoBlocks;\r\n"]},"metadata":{},"sourceType":"module"}