{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\divya\\\\OneDrive\\\\Desktop\\\\Eduform\\\\eduform\\\\src\\\\components\\\\login\\\\register.js\";\nimport React, { Component } from \"react\";\nimport ReactDOM from 'react-dom';\nimport { withRouter } from \"react-router-dom\";\nimport Bootstrap from '../../.././node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport Logo from '../.././assets/edLogo.png';\nconst validEmailRegex = RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i);\nconst validPhoneRegex = RegExp(/^\\d+$/i);\n\nconst validateForm = errors => {\n  let valid = true;\n  Object.values(errors).forEach( // if we have an error string, set valid to false\n  val => val.length > 0 && (valid = false));\n  return valid;\n};\n\nconst countErrors = errors => {\n  let count = 0;\n  Object.values(errors).forEach(val => val.length > 0 && (count = count + 1));\n  return count;\n};\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      event.preventDefault();\n      const {\n        name,\n        value\n      } = event.target;\n      let errors = this.state.errors;\n\n      switch (name) {\n        case 'firstName':\n          errors.firstName = value.length === 0 ? 'First name cannot be empty' : '';\n          break;\n\n        case 'lastName':\n          errors.lastName = value.length === 0 ? 'Last name cannot be empty' : '';\n          break;\n\n        case 'email':\n          errors.email = validEmailRegex.test(value) ? '' : 'Email is not valid';\n          break;\n\n        case 'phone':\n          errors.phone = value.length === 10 && validPhoneRegex.test(value) ? '' : 'Phone number must be of length 10';\n          break;\n\n        case 'password':\n          errors.password = value.length < 8 ? 'Password must be atleast 8 characters long' : '';\n\n          if (errors.password === '' && document.getElementById(\"password\").value === document.getElementById(\"confirmPassword\").value) {\n            errors.confirmPassword = '';\n          } else {\n            errors.confirmPassword = 'Passwords do not match';\n          }\n\n          break;\n\n        case 'confirmPassword':\n          errors.confirmPassword = value !== document.getElementById(\"password\").value ? 'Passwords do not match' : '';\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        errors,\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      let errors = this.state.errors;\n      let vars = [\"firstName\", \"lastName\", \"email\", \"phone\", \"password\", \"confirmPassword\"];\n      var i;\n\n      for (i = 0; i < vars.length; i++) {\n        if (!this.state[vars[i]] || this.state[vars[i]].length === 0) {\n          this.state.errors[vars[i]] = \"This cannot be empty\";\n        }\n      }\n\n      this.setState({\n        formValid: validateForm(this.state.errors)\n      });\n      this.setState({\n        errorCount: countErrors(this.state.errors)\n      });\n\n      if (this.state.errorCount != null && this.state.errorCount === 0 && this.state.formValid) {\n        alert(\"Verfication email has been sent. Kindly verify it!\");\n        return this.props.history.push('/sign-in');\n      }\n    };\n\n    this.state = {\n      firstName: null,\n      lastName: null,\n      email: null,\n      phone: null,\n      password: null,\n      confirmPassword: null,\n      errors: {\n        firstName: '',\n        lastName: '',\n        email: '',\n        phone: '',\n        password: '',\n        confirmPassword: ''\n      }\n    };\n  }\n\n  render() {\n    const {\n      errors,\n      formValid\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row myIntro\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-5 col-md-7 bg-black myLogIn text-primarys\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      noValidate: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      style: {\n        width: '70px',\n        height: '70px'\n      },\n      src: Logo,\n      alt: \"edLogo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      style: {\n        paddingBottom: '10px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 19\n      }\n    }, \" Register for EduForm! \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      style: {\n        fontSize: '.9rem'\n      },\n      id: \"first-name\",\n      name: \"firstName\",\n      className: \"form-control\",\n      placeholder: \"First name\",\n      onChange: this.handleChange,\n      noValidate: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 27\n      }\n    }), errors.firstName.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 59\n      }\n    }, errors.firstName)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      style: {\n        fontSize: '.9rem'\n      },\n      id: \"last-name\",\n      name: \"lastName\",\n      className: \"form-control\",\n      placeholder: \"Last name\",\n      onChange: this.handleChange,\n      noValidate: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 27\n      }\n    }), errors.lastName.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 58\n      }\n    }, errors.lastName)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"email\",\n      style: {\n        fontSize: '.9rem'\n      },\n      id: \"email\",\n      name: \"email\",\n      className: \"form-control\",\n      placeholder: \"Email Address\",\n      onChange: this.handleChange,\n      noValidate: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 27\n      }\n    }), errors.email.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 55\n      }\n    }, errors.email)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"phone\",\n      style: {\n        fontSize: '.9rem'\n      },\n      id: \"phone\",\n      name: \"phone\",\n      className: \"form-control\",\n      placeholder: \"Phone Number\",\n      onChange: this.handleChange,\n      noValidate: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 27\n      }\n    }), errors.phone.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 55\n      }\n    }, errors.phone)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      style: {\n        fontSize: '.9rem'\n      },\n      id: \"password\",\n      name: \"password\",\n      className: \"form-control\",\n      placeholder: \"Password\",\n      onChange: this.handleChange,\n      noValidate: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 27\n      }\n    }), errors.password.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 58\n      }\n    }, errors.password)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      style: {\n        fontSize: '.9rem'\n      },\n      id: \"confirmPassword\",\n      name: \"confirmPassword\",\n      className: \"form-control\",\n      placeholder: \"Confirm password\",\n      onChange: this.handleChange,\n      noValidate: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 27\n      }\n    }), errors.confirmPassword.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 65\n      }\n    }, errors.confirmPassword)), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-block log\",\n      style: {\n        fontSize: '1.2rem',\n        backgroundColor: '#febf63'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 23\n      }\n    }, \"Register\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"forgot-password text-right\",\n      style: {\n        paddingTop: '7px',\n        fontSize: '1.1rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 23\n      }\n    }, \"Already registered? \", /*#__PURE__*/React.createElement(\"a\", {\n      href: \"/#\",\n      style: {\n        color: '#febf63'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 47\n      }\n    }, \"Sign In\"))))));\n  } //{this.state.errorCount !== null ? <p className=\"form-status\">Form is {formValid ? 'valid ✅' : 'invalid ❌'}</p> : 'Form not submitted'}\n\n\n}\n\nexport default withRouter(Register);","map":{"version":3,"sources":["C:/Users/divya/OneDrive/Desktop/Eduform/eduform/src/components/login/register.js"],"names":["React","Component","ReactDOM","withRouter","Bootstrap","Logo","validEmailRegex","RegExp","validPhoneRegex","validateForm","errors","valid","Object","values","forEach","val","length","countErrors","count","Register","constructor","props","handleChange","event","preventDefault","name","value","target","state","firstName","lastName","email","test","phone","password","document","getElementById","confirmPassword","setState","handleSubmit","vars","i","formValid","errorCount","alert","history","push","render","width","height","paddingBottom","fontSize","backgroundColor","paddingTop","color"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Bootstrap from '../../.././node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport Logo from '../.././assets/edLogo.png';\r\n\r\n\r\nconst validEmailRegex = RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i);\r\n\r\nconst validPhoneRegex = RegExp(/^\\d+$/i);\r\n\r\n\r\nconst validateForm = (errors) => {\r\n    let valid = true;\r\n    Object.values(errors).forEach(\r\n    // if we have an error string, set valid to false\r\n    (val) => val.length > 0 && (valid = false)\r\n    );\r\n    return valid;\r\n}\r\n\r\nconst countErrors = (errors) => {\r\n    let count = 0;\r\n    Object.values(errors).forEach(\r\n      (val) => val.length > 0 && (count = count+1)\r\n    );\r\n    return count;\r\n}\r\n\r\nclass Register extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          firstName: null,\r\n          lastName: null,\r\n          email: null,\r\n          phone: null,\r\n          password: null,\r\n          confirmPassword: null,\r\n          errors: {\r\n            firstName: '',\r\n            lastName: '',\r\n            email: '',\r\n            phone: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n          }\r\n        };\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        event.preventDefault();\r\n\r\n        const { name, value } = event.target;\r\n        let errors = this.state.errors;\r\n\r\n        switch (name) {\r\n\r\n            case 'firstName':\r\n                errors.firstName =\r\n                value.length === 0\r\n                    ? 'First name cannot be empty'\r\n                    : '';\r\n                break;\r\n            case 'lastName':\r\n                errors.lastName =\r\n                  value.length === 0\r\n                    ? 'Last name cannot be empty'\r\n                    : '';\r\n                break;\r\n            case 'email':\r\n                errors.email =\r\n                validEmailRegex.test(value)\r\n                    ? ''\r\n                    : 'Email is not valid';\r\n                break;\r\n            case 'phone':\r\n                errors.phone =\r\n                (value.length === 10 && (validPhoneRegex.test(value)))\r\n                    ? ''\r\n                    : 'Phone number must be of length 10';\r\n                break;\r\n            case 'password':\r\n                errors.password =\r\n                value.length < 8\r\n                    ? 'Password must be atleast 8 characters long'\r\n                    : '';\r\n                if(errors.password === '' && document.getElementById(\"password\").value === document.getElementById(\"confirmPassword\").value){\r\n                    errors.confirmPassword = '';\r\n                } else{\r\n                    errors.confirmPassword = 'Passwords do not match';\r\n                }\r\n\r\n                break;\r\n\r\n            case 'confirmPassword':\r\n                errors.confirmPassword =\r\n                value !== document.getElementById(\"password\").value\r\n                    ? 'Passwords do not match'\r\n                    : '';\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({errors, [name]: value});\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        let errors = this.state.errors;\r\n\r\n        let vars = [\"firstName\",\"lastName\",\"email\",\"phone\",\"password\",\"confirmPassword\"];\r\n\r\n        var i;\r\n        for (i = 0; i < vars.length; i++) {\r\n\r\n            if(!this.state[vars[i]] || this.state[vars[i]].length === 0){\r\n                this.state.errors[vars[i]] = \"This cannot be empty\";\r\n            }\r\n        }\r\n\r\n        this.setState({formValid: validateForm(this.state.errors)});\r\n        this.setState({errorCount: countErrors(this.state.errors)});\r\n\r\n        if (this.state.errorCount != null && this.state.errorCount === 0 && this.state.formValid){\r\n            alert(\"Verfication email has been sent. Kindly verify it!\");\r\n\r\n            return this.props.history.push('/sign-in');\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        const {errors, formValid} = this.state;\r\n        return (\r\n          <div className=\"container\">\r\n            <div className=\"row myIntro\">\r\n              <div className=\"col-lg-5 col-md-7 bg-black myLogIn text-primarys\">\r\n                  <form onSubmit={this.handleSubmit} noValidate>\r\n                  <img style={{width: '70px', height: '70px'}} src={Logo} alt=\"edLogo\"/>\r\n                  <h1 style={{paddingBottom: '10px'}}> Register for EduForm! </h1>\r\n                      <div className=\"form-group\">\r\n                          <input type=\"text\" style={{fontSize: '.9rem'}} id=\"first-name\" name=\"firstName\" className=\"form-control\" placeholder=\"First name\" onChange={this.handleChange} noValidate/>\r\n                          {errors.firstName.length > 0 && <span className='error'>{errors.firstName}</span>}\r\n                      </div>\r\n\r\n                      <div className=\"form-group\">\r\n                          <input type=\"text\" style={{fontSize: '.9rem'}} id=\"last-name\" name=\"lastName\" className=\"form-control\" placeholder=\"Last name\" onChange={this.handleChange} noValidate/>\r\n                          {errors.lastName.length > 0 && <span className='error'>{errors.lastName}</span>}\r\n                      </div>\r\n\r\n                      <div className=\"form-group\">\r\n                          <input type=\"email\" style={{fontSize: '.9rem'}} id=\"email\" name=\"email\" className=\"form-control\" placeholder=\"Email Address\" onChange={this.handleChange} noValidate/>\r\n                          {errors.email.length > 0 && <span className='error'>{errors.email}</span>}\r\n                      </div>\r\n\r\n                      <div className=\"form-group\">\r\n                          <input type=\"phone\" style={{fontSize: '.9rem'}} id=\"phone\" name=\"phone\" className=\"form-control\" placeholder=\"Phone Number\" onChange={this.handleChange} noValidate/>\r\n                          {errors.phone.length > 0 && <span className='error'>{errors.phone}</span>}\r\n                      </div>\r\n\r\n                      <div className=\"form-group\">\r\n                          <input type=\"password\" style={{fontSize: '.9rem'}} id=\"password\" name=\"password\" className=\"form-control\" placeholder=\"Password\" onChange={this.handleChange} noValidate/>\r\n                          {errors.password.length > 0 && <span className='error'>{errors.password}</span>}\r\n                      </div>\r\n\r\n                      <div className=\"form-group\">\r\n                          <input type=\"password\" style={{fontSize: '.9rem'}} id=\"confirmPassword\" name=\"confirmPassword\" className=\"form-control\" placeholder=\"Confirm password\" onChange={this.handleChange} noValidate/>\r\n                          {errors.confirmPassword.length > 0 && <span className='error'>{errors.confirmPassword}</span>}\r\n                      </div>\r\n\r\n                      <button type=\"submit\" className=\"btn btn-block log\" style={{fontSize: '1.2rem', backgroundColor: '#febf63'}}>Register</button>\r\n\r\n                      <p className=\"forgot-password text-right\" style={{paddingTop: '7px', fontSize: '1.1rem'}}>\r\n                          Already registered? <a href=\"/#\" style={{color: '#febf63'}}>Sign In</a>\r\n                      </p>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n//{this.state.errorCount !== null ? <p className=\"form-status\">Form is {formValid ? 'valid ✅' : 'invalid ❌'}</p> : 'Form not submitted'}\r\n}\r\n\r\n\r\nexport default withRouter(Register);\r\n"]},"metadata":{},"sourceType":"module"}