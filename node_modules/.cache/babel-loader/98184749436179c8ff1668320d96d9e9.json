{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { FormContext } from './FormContext';\nimport { getter, setter, clone, cloneObject, guid } from '@progress/kendo-react-common';\n/**\n * @hidden\n */\n\nvar FORCEUPDATE_ACCUMULATOR_TIMEOUT = 0;\n/**\n * Represents the [KendoReact Form component]({% slug overview_form %}).\n *\n * @example\n * ```jsx\n * export const FormInput = (fieldRenderProps) => {\n *     const onValueChange = React.useCallback(\n *         (event) => fieldRenderProps.onChange(event.target.value),\n *         [fieldRenderProps.onChange]\n *     );\n *     return (\n *         <input\n *             className={'k-textbox'}\n *             value={fieldRenderProps.value}\n *             onChange={onValueChange}\n *         />\n *     );\n * };\n *\n * export const App = () => {\n *     const handleSubmit = (dataItem) => alert(JSON.stringify(dataItem));\n *     return (\n *         <Form\n *             initialValues={{title: ''}}\n *             onSubmit={handleSubmit}\n *             render={(formRenderProps) => (\n *                 <div>\n *                     <Field name={'title'} component={FormInput} />\n *                     <button\n *                         className=\"k-button\"\n *                         disabled={!formRenderProps.allowSubmit}\n *                         onClick={formRenderProps.onSubmit}\n *                     >\n *                         Submit\n *                     </button>\n *                 </div>\n *             )}\n *         />\n *     );\n * };\n *\n * ReactDOM.render(<App />, document.querySelector('my-app'));\n * ```\n */\n\nvar Form =\n/** @class */\nfunction (_super) {\n  __extends(Form, _super);\n  /**\n   * @hidden\n   */\n\n\n  function Form(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this._id = guid();\n    _this._touched = {};\n    _this._visited = {};\n    _this._modified = {};\n    _this._validatorsByField = {};\n    _this._values = {};\n    _this._fields = {};\n    _this._unmounted = false;\n    /**\n     * @hidden\n     */\n\n    _this.isValid = function () {\n      return _this.isFormValid(_this.errors);\n    };\n    /**\n     * @hidden\n     */\n\n\n    _this.accumulatedForceUpdate = function () {\n      // IMPORTANT:\n      // Should only be used for updates not comming from editors as it\n      // will cause cursor jump as react will reset the editor to old value\n      if (_this._accumulatorTimeout) {\n        clearTimeout(_this._accumulatorTimeout);\n      }\n\n      _this._accumulatorTimeout = setTimeout(function () {\n        _this._accumulatorTimeout = undefined;\n\n        _this.forceUpdate();\n      }, FORCEUPDATE_ACCUMULATOR_TIMEOUT);\n    };\n    /**\n     * @hidden\n     */\n\n\n    _this.resetForm = function () {\n      _this.values = clone(_this.props.initialValues);\n      _this._id = guid();\n      _this._touched = {};\n      _this._visited = {};\n      _this._modified = {};\n      _this._validatorsByField = {};\n      _this._fields = {};\n\n      _this.forceUpdate();\n    };\n    /**\n     * Method for resetting the form state outside the form component.\n     *\n     * > Use `onReset` only if you cannot achieve the desired behavior through the Field component or by FormRenderProps.\n     */\n\n\n    _this.onReset = function () {\n      return _this.resetForm();\n    };\n    /**\n     * @hidden\n     */\n\n\n    _this.addField = function (field) {\n      _this._fields[field] = true;\n    };\n    /**\n     * @hidden\n     */\n\n\n    _this.onSubmit = function (event) {\n      var touchedVisited = {};\n      var fields = _this.fields;\n\n      if (event) {\n        if (typeof event.preventDefault === 'function') {\n          event.preventDefault();\n        }\n\n        if (typeof event.stopPropagation === 'function') {\n          event.stopPropagation();\n        }\n      }\n\n      fields.forEach(function (fieldName) {\n        touchedVisited[fieldName] = true;\n      }); // show validations\n\n      _this.visited = __assign({}, touchedVisited);\n      _this.touched = __assign({}, touchedVisited);\n      var values = _this.values;\n\n      var isValid = _this.isFormValid(_this.errors);\n\n      var isModified = _this.isFormModified(_this.modified, fields); // TODO: introduce form state prop 'submitted'\n\n\n      if (_this.props.onSubmitClick) {\n        _this.props.onSubmitClick.call(undefined, {\n          values: values,\n          isValid: isValid,\n          isModified: isModified,\n          event: event\n        });\n      }\n\n      if (isValid && isModified && _this.props.onSubmit) {\n        _this.props.onSubmit.call(undefined, values, event);\n      }\n\n      _this.forceUpdate();\n    };\n    /**\n     * Method for emiting changes to a specific field outside the form component.\n     *\n     * > Use `onChange` only if you cannot achieve the desired behavior through the Field component by FormRenderProps.\n     */\n\n\n    _this.onChange = function (name, options) {\n      var _a;\n\n      var value = options.value;\n\n      _this.addField(name);\n\n      if (!_this.modified[name]) {\n        _this.modified = __assign({}, _this.modified, (_a = {}, _a[name] = true, _a));\n      }\n\n      _this.onBlur(name, true);\n\n      _this.valueSetter(name, value);\n\n      _this.forceUpdate();\n    };\n    /**\n     * @hidden\n     */\n\n\n    _this.onFocus = function (name, skipForceUpdate) {\n      var _a;\n\n      if (_this.visited[name]) {\n        return;\n      }\n\n      _this.visited = __assign({}, _this.visited, (_a = {}, _a[name] = true, _a));\n\n      if (!skipForceUpdate) {\n        _this.forceUpdate();\n      }\n    };\n    /**\n     * @hidden\n     */\n\n\n    _this.onBlur = function (name, skipForceUpdate) {\n      var _a;\n\n      if (_this.touched[name]) {\n        return;\n      }\n\n      _this.onFocus(name, skipForceUpdate);\n\n      _this.touched = __assign({}, _this.touched, (_a = {}, _a[name] = true, _a));\n\n      if (!skipForceUpdate) {\n        _this.forceUpdate();\n      }\n    };\n    /**\n     * @hidden\n     */\n\n\n    _this.onFieldRegister = function (name, validator) {\n      var _a;\n\n      _this.addField(name); // The sole reason for using class props over state - nextIndex, needed for destroying validators\n\n\n      var oldValidators = _this.validatorsByField[name] || [];\n      var nextIndex = oldValidators.length;\n      _this.validatorsByField = __assign({}, _this.validatorsByField, (_a = {}, _a[name] = oldValidators.concat([validator]), _a));\n\n      _this.accumulatedForceUpdate();\n\n      return function () {\n        var _a; // onFieldUnregister:\n\n\n        if (_this._unmounted) {\n          return;\n        }\n\n        var newValidators = (_this.validatorsByField[name] || []).slice();\n        var validatorIsUnregistered = Boolean(newValidators[nextIndex]);\n        newValidators[nextIndex] = undefined;\n        _this.validatorsByField = __assign({}, _this.validatorsByField, (_a = {}, _a[name] = newValidators, _a));\n\n        if (validatorIsUnregistered) {\n          _this.accumulatedForceUpdate();\n        }\n      };\n    };\n    /**\n     * @hidden\n     */\n\n\n    _this.isFormValid = function (errors) {\n      return !Object.keys(errors).some(function (fieldName) {\n        return Boolean(errors[fieldName]);\n      });\n    };\n    /**\n     * @hidden\n     */\n\n\n    _this.isFormModified = function (modified, fields) {\n      return fields.some(function (fieldName) {\n        return modified[fieldName];\n      });\n    };\n    /**\n     * @hidden\n     */\n\n\n    _this.isFormHasNotTouched = function (touched, fields) {\n      return fields.some(function (fieldName) {\n        return !touched[fieldName];\n      });\n    };\n    /**\n     * @hidden\n     */\n\n\n    _this.isFormTouched = function (touched, fields) {\n      return fields.some(function (fieldName) {\n        return touched[fieldName];\n      });\n    };\n    /**\n     * @hidden\n     */\n\n\n    _this.isFormVisited = function (visited, fields) {\n      return fields.some(function (fieldName) {\n        return visited[fieldName];\n      });\n    };\n    /**\n     * @hidden\n     */\n\n\n    _this.valueGetter = function (fieldName) {\n      return getter(fieldName)(_this.values);\n    };\n    /**\n     * @hidden\n     */\n\n\n    _this.valueSetter = function (fieldName, value) {\n      return setter(fieldName)(_this.values, value);\n    };\n    /**\n     * @hidden\n     */\n\n\n    _this.onArrayAction = function (name) {\n      var _a;\n\n      _this.addField(name);\n\n      if (!_this.modified[name]) {\n        _this.modified = __assign({}, _this.modified, (_a = {}, _a[name] = true, _a));\n      }\n\n      _this.onBlur(name, true);\n    };\n    /**\n     * @hidden\n     */\n\n\n    _this.onInsert = function (name, options) {\n      _this.onArrayAction(name);\n\n      var newArray = (_this.valueGetter(name) || []).slice();\n      newArray.splice(options.index, 0, options.value);\n\n      _this.valueSetter(name, newArray);\n\n      _this.forceUpdate();\n    };\n    /**\n     * @hidden\n     */\n\n\n    _this.onUnshift = function (name, options) {\n      _this.onInsert(name, {\n        value: options.value,\n        index: 0\n      });\n    };\n    /**\n     * @hidden\n     */\n\n\n    _this.onPush = function (name, options) {\n      _this.onArrayAction(name);\n\n      var newArray = (_this.valueGetter(name) || []).concat([options.value]);\n\n      _this.valueSetter(name, newArray);\n\n      _this.forceUpdate();\n    };\n    /**\n     * @hidden\n     */\n\n\n    _this.onPop = function (name) {\n      _this.onArrayAction(name);\n\n      var newArray = (_this.valueGetter(name) || []).slice();\n      var value = newArray.pop();\n\n      _this.valueSetter(name, newArray);\n\n      _this.forceUpdate();\n\n      return value;\n    };\n    /**\n     * @hidden\n     */\n\n\n    _this.onRemove = function (name, options) {\n      _this.onArrayAction(name);\n\n      var newArray = (_this.valueGetter(name) || []).slice();\n      var value = newArray.splice(options.index, 1);\n\n      _this.valueSetter(name, newArray);\n\n      _this.forceUpdate();\n\n      return value;\n    };\n    /**\n     * @hidden\n     */\n\n\n    _this.onReplace = function (name, options) {\n      _this.onArrayAction(name);\n\n      var newArray = (_this.valueGetter(name) || []).slice();\n      newArray.splice(options.index, 1, options.value);\n\n      _this.valueSetter(name, newArray);\n\n      _this.forceUpdate();\n    };\n    /**\n     * @hidden\n     */\n\n\n    _this.onMove = function (name, options) {\n      _this.onArrayAction(name);\n\n      var newArray = (_this.valueGetter(name) || []).slice();\n      var value = newArray[options.prevIndex];\n      newArray.splice(options.prevIndex, 1);\n      newArray.splice(options.nextIndex, 0, value);\n\n      _this.valueSetter(name, newArray);\n\n      _this.forceUpdate();\n    };\n\n    _this.values = clone(props.initialValues);\n    return _this;\n  }\n\n  Object.defineProperty(Form.prototype, \"touched\", {\n    /**\n     * @hidden\n     */\n    get: function get() {\n      return this._touched;\n    },\n\n    /**\n     * @hidden\n     */\n    set: function set(value) {\n      this._touched = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Form.prototype, \"visited\", {\n    /**\n     * @hidden\n     */\n    get: function get() {\n      return this._visited;\n    },\n\n    /**\n     * @hidden\n     */\n    set: function set(value) {\n      this._visited = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Form.prototype, \"modified\", {\n    /**\n     * @hidden\n     */\n    get: function get() {\n      return this._modified;\n    },\n\n    /**\n     * @hidden\n     */\n    set: function set(value) {\n      this._modified = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Form.prototype, \"validatorsByField\", {\n    /**\n     * @hidden\n     */\n    get: function get() {\n      return this._validatorsByField;\n    },\n\n    /**\n     * @hidden\n     */\n    set: function set(value) {\n      this._validatorsByField = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Form.prototype, \"values\", {\n    /**\n     * @hidden\n     */\n    get: function get() {\n      return this._values;\n    },\n\n    /**\n     * @hidden\n     */\n    set: function set(value) {\n      this._values = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Form.prototype, \"fields\", {\n    /**\n     * @hidden\n     */\n    get: function get() {\n      return Object.keys(this._fields);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Form.prototype, \"formErrors\", {\n    /**\n     * @hidden\n     */\n    get: function get() {\n      if (this.props.validator) {\n        return this.props.validator(this.values, this.valueGetter);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Form.prototype, \"errors\", {\n    /**\n     * @hidden\n     */\n    get: function get() {\n      var _this = this;\n\n      var errors = {};\n      var fields = this.fields;\n      var validatorsByField = this.validatorsByField;\n      fields.forEach(function (fieldName) {\n        errors[fieldName] = '';\n\n        if (validatorsByField[fieldName]) {\n          var validators_1 = [];\n          validatorsByField[fieldName].forEach(function (validator) {\n            if (Array.isArray(validator)) {\n              validators_1.push.apply(validators_1, validator);\n            } else {\n              validators_1.push(validator);\n            }\n          }); // find first validation error\n\n          validators_1.find(function (validator) {\n            if (validator) {\n              var result = validator(_this.valueGetter(fieldName), _this.valueGetter, {\n                name: fieldName\n              });\n\n              if (result) {\n                errors[fieldName] = result;\n                return true;\n              }\n            }\n\n            return false;\n          });\n        }\n      });\n      var formErrors = this.formErrors;\n\n      if (formErrors) {\n        cloneObject(this.formErrors, errors);\n      }\n\n      return errors;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * @hidden\n   */\n\n  Form.prototype.componentWillUnmount = function () {\n    this._unmounted = true;\n\n    if (this._accumulatorTimeout) {\n      clearTimeout(this._accumulatorTimeout);\n    }\n  };\n  /**\n   * @hidden\n   */\n\n\n  Form.prototype.render = function () {\n    var render = this.props.render;\n    var touched = this.touched;\n    var visited = this.visited;\n    var modified = this.modified;\n    var fields = this.fields;\n    var errors = this.errors;\n    var formValid = this.isFormValid(errors);\n    var formModified = this.isFormModified(modified, fields);\n    var formTouched = this.isFormTouched(touched, fields);\n    var formVisited = this.isFormVisited(visited, fields);\n    var formHasNotTouched = this.isFormHasNotTouched(touched, fields); // 1. The form is not touched, but has errors - allow submit to force validation.\n    // 2. The form is valid and modified - if not modified, disable submit.\n\n    var allowSubmit = formHasNotTouched && !formValid || formValid && formModified;\n    return React.createElement(FormContext.Provider, {\n      key: this._id,\n      value: {\n        id: this._id,\n        valueGetter: this.valueGetter,\n        errors: errors,\n        modified: modified,\n        touched: touched,\n        visited: visited,\n        registerField: this.onFieldRegister,\n        onSubmit: this.onSubmit,\n        onChange: this.onChange,\n        onFocus: this.onFocus,\n        onBlur: this.onBlur,\n        onUnshift: this.onUnshift,\n        onPush: this.onPush,\n        onInsert: this.onInsert,\n        onPop: this.onPop,\n        onRemove: this.onRemove,\n        onReplace: this.onReplace,\n        onMove: this.onMove\n      }\n    }, render({\n      valid: formValid,\n      modified: formModified,\n      touched: formTouched,\n      visited: formVisited,\n      valueGetter: this.valueGetter,\n      errors: errors,\n      allowSubmit: allowSubmit,\n      onChange: this.onChange,\n      onSubmit: this.onSubmit,\n      onFormReset: this.resetForm\n    }));\n  };\n  /**\n   * @hidden\n   */\n\n\n  Form.displayName = 'KendoReactForm';\n  /**\n   * @hidden\n   */\n\n  Form.propTypes = {\n    initialValues: PropTypes.any,\n    onSubmit: PropTypes.func,\n    onSubmitClick: PropTypes.func,\n    render: PropTypes.func.isRequired\n  };\n  return Form;\n}(React.Component);\n\nexport { Form };","map":{"version":3,"sources":["../../src/Form.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAK,SAAZ,MAA2B,YAA3B;AACA,SAAS,WAAT,QAA4B,eAA5B;AAEA,SAAS,MAAT,EAAiB,MAAjB,EAAyB,KAAzB,EAAgC,WAAhC,EAA6C,IAA7C,QAAyD,8BAAzD;AAKA;;;;AAGA,IAAM,+BAA+B,GAAG,CAAxC;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4CA,IAAA,IAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA0B,EAAA,SAAA,CAAA,IAAA,EAAA,MAAA,CAAA;AA8JtB;;;;;AAGA,WAAA,IAAA,CAAY,KAAZ,EAA4B;AAA5B,QAAA,KAAA,GACI,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,KAAN,KAAY,IADhB;;AAjJQ,IAAA,KAAA,CAAA,GAAA,GAAc,IAAI,EAAlB;AACA,IAAA,KAAA,CAAA,QAAA,GAA8B,EAA9B;AACA,IAAA,KAAA,CAAA,QAAA,GAA8B,EAA9B;AACA,IAAA,KAAA,CAAA,SAAA,GAA+B,EAA/B;AACA,IAAA,KAAA,CAAA,kBAAA,GAA0F,EAA1F;AACA,IAAA,KAAA,CAAA,OAAA,GAAyB,EAAzB;AACA,IAAA,KAAA,CAAA,OAAA,GAAU,EAAV;AACA,IAAA,KAAA,CAAA,UAAA,GAAa,KAAb;AA0JR;;;;AAGO,IAAA,KAAA,CAAA,OAAA,GAAU,YAAA;AACb,aAAO,KAAI,CAAC,WAAL,CAAiB,KAAI,CAAC,MAAtB,CAAP;AACH,KAFM;AAIP;;;;;AAGA,IAAA,KAAA,CAAA,sBAAA,GAAyB,YAAA;AACrB;AACA;AACA;AACA,UAAI,KAAI,CAAC,mBAAT,EAA8B;AAC1B,QAAA,YAAY,CAAC,KAAI,CAAC,mBAAN,CAAZ;AACH;;AAED,MAAA,KAAI,CAAC,mBAAL,GAA2B,UAAU,CACjC,YAAA;AACI,QAAA,KAAI,CAAC,mBAAL,GAA2B,SAA3B;;AACA,QAAA,KAAI,CAAC,WAAL;AACH,OAJgC,EAKjC,+BALiC,CAArC;AAOH,KAfD;AAiBA;;;;;AAGA,IAAA,KAAA,CAAA,SAAA,GAAY,YAAA;AACR,MAAA,KAAI,CAAC,MAAL,GAAc,KAAK,CAAC,KAAI,CAAC,KAAL,CAAW,aAAZ,CAAnB;AAEA,MAAA,KAAI,CAAC,GAAL,GAAW,IAAI,EAAf;AACA,MAAA,KAAI,CAAC,QAAL,GAAgB,EAAhB;AACA,MAAA,KAAI,CAAC,QAAL,GAAgB,EAAhB;AACA,MAAA,KAAI,CAAC,SAAL,GAAiB,EAAjB;AACA,MAAA,KAAI,CAAC,kBAAL,GAA0B,EAA1B;AACA,MAAA,KAAI,CAAC,OAAL,GAAe,EAAf;;AAEA,MAAA,KAAI,CAAC,WAAL;AACH,KAXD;AAaA;;;;;;;AAKA,IAAA,KAAA,CAAA,OAAA,GAAU,YAAA;AAAM,aAAA,KAAI,CAAJ,SAAA,EAAA;AAAgB,KAAhC;AAEA;;;;;AAGA,IAAA,KAAA,CAAA,QAAA,GAAW,UAAC,KAAD,EAAc;AACrB,MAAA,KAAI,CAAC,OAAL,CAAa,KAAb,IAAsB,IAAtB;AACH,KAFD;AAIA;;;;;AAGA,IAAA,KAAA,CAAA,QAAA,GAAW,UAAC,KAAD,EAAiC;AACxC,UAAM,cAAc,GAAG,EAAvB;AACA,UAAM,MAAM,GAAG,KAAI,CAAC,MAApB;;AAEA,UAAI,KAAJ,EAAW;AACP,YAAI,OAAO,KAAK,CAAC,cAAb,KAAgC,UAApC,EAAgD;AAC5C,UAAA,KAAK,CAAC,cAAN;AACH;;AACD,YAAI,OAAO,KAAK,CAAC,eAAb,KAAiC,UAArC,EAAiD;AAC7C,UAAA,KAAK,CAAC,eAAN;AACH;AACJ;;AAED,MAAA,MAAM,CAAC,OAAP,CAAe,UAAA,SAAA,EAAS;AACpB,QAAA,cAAc,CAAC,SAAD,CAAd,GAA4B,IAA5B;AACH,OAFD,EAbwC,CAiBxC;;AACA,MAAA,KAAI,CAAC,OAAL,GAAY,QAAA,CAAA,EAAA,EAAQ,cAAR,CAAZ;AACA,MAAA,KAAI,CAAC,OAAL,GAAY,QAAA,CAAA,EAAA,EAAQ,cAAR,CAAZ;AAEA,UAAM,MAAM,GAAG,KAAI,CAAC,MAApB;;AACA,UAAM,OAAO,GAAG,KAAI,CAAC,WAAL,CAAiB,KAAI,CAAC,MAAtB,CAAhB;;AACA,UAAM,UAAU,GAAG,KAAI,CAAC,cAAL,CAAoB,KAAI,CAAC,QAAzB,EAAmC,MAAnC,CAAnB,CAvBwC,CAyBxC;;;AACA,UAAI,KAAI,CAAC,KAAL,CAAW,aAAf,EAA8B;AAC1B,QAAA,KAAI,CAAC,KAAL,CAAW,aAAX,CAAyB,IAAzB,CAA8B,SAA9B,EAAyC;AACjC,UAAA,MAAM,EAAA,MAD2B;AAEjC,UAAA,OAAO,EAAE,OAFwB;AAGjC,UAAA,UAAU,EAAE,UAHqB;AAIjC,UAAA,KAAK,EAAA;AAJ4B,SAAzC;AAMH;;AAED,UAAI,OAAO,IAAI,UAAX,IAAyB,KAAI,CAAC,KAAL,CAAW,QAAxC,EAAkD;AAC9C,QAAA,KAAI,CAAC,KAAL,CAAW,QAAX,CAAoB,IAApB,CAAyB,SAAzB,EAAoC,MAApC,EAA4C,KAA5C;AACH;;AAED,MAAA,KAAI,CAAC,WAAL;AACH,KAxCD;AA0CA;;;;;;;AAKA,IAAA,KAAA,CAAA,QAAA,GAAW,UAAC,IAAD,EAAe,OAAf,EAAoC;;;AACpC,UAAA,KAAA,GAAA,OAAA,CAAA,KAAA;;AACP,MAAA,KAAI,CAAC,QAAL,CAAc,IAAd;;AAEA,UAAI,CAAC,KAAI,CAAC,QAAL,CAAc,IAAd,CAAL,EAA0B;AACtB,QAAA,KAAI,CAAC,QAAL,GAAa,QAAA,CAAA,EAAA,EAAQ,KAAI,CAAC,QAAb,GAAqB,EAAA,GAAA,EAAA,EAAA,EAAA,CAAG,IAAH,CAAA,GAAU,IAAV,EAAc,EAAnC,EAAb;AACH;;AAED,MAAA,KAAI,CAAC,MAAL,CAAY,IAAZ,EAAkB,IAAlB;;AAEA,MAAA,KAAI,CAAC,WAAL,CAAiB,IAAjB,EAAuB,KAAvB;;AAEA,MAAA,KAAI,CAAC,WAAL;AACH,KAbD;AAeA;;;;;AAGA,IAAA,KAAA,CAAA,OAAA,GAAU,UAAC,IAAD,EAAe,eAAf,EAAwC;;;AAC9C,UAAI,KAAI,CAAC,OAAL,CAAa,IAAb,CAAJ,EAAwB;AACpB;AACH;;AAED,MAAA,KAAI,CAAC,OAAL,GAAY,QAAA,CAAA,EAAA,EAAQ,KAAI,CAAC,OAAb,GAAoB,EAAA,GAAA,EAAA,EAAA,EAAA,CAAG,IAAH,CAAA,GAAU,IAAV,EAAc,EAAlC,EAAZ;;AAEA,UAAI,CAAC,eAAL,EAAsB;AAClB,QAAA,KAAI,CAAC,WAAL;AACH;AACJ,KAVD;AAYA;;;;;AAGA,IAAA,KAAA,CAAA,MAAA,GAAS,UAAC,IAAD,EAAe,eAAf,EAAwC;;;AAC7C,UAAI,KAAI,CAAC,OAAL,CAAa,IAAb,CAAJ,EAAwB;AACpB;AACH;;AAED,MAAA,KAAI,CAAC,OAAL,CAAa,IAAb,EAAmB,eAAnB;;AAEA,MAAA,KAAI,CAAC,OAAL,GAAY,QAAA,CAAA,EAAA,EAAQ,KAAI,CAAC,OAAb,GAAoB,EAAA,GAAA,EAAA,EAAA,EAAA,CAAG,IAAH,CAAA,GAAU,IAAV,EAAc,EAAlC,EAAZ;;AAEA,UAAI,CAAC,eAAL,EAAsB;AAClB,QAAA,KAAI,CAAC,WAAL;AACH;AACJ,KAZD;AAcA;;;;;AAGA,IAAA,KAAA,CAAA,eAAA,GAAkB,UAAC,IAAD,EAAe,SAAf,EAA+E;;;AAC7F,MAAA,KAAI,CAAC,QAAL,CAAc,IAAd,EAD6F,CAG7F;;;AACA,UAAM,aAAa,GAAI,KAAI,CAAC,iBAAL,CAAuB,IAAvB,KAAgC,EAAvD;AACA,UAAM,SAAS,GAAG,aAAa,CAAC,MAAhC;AAEA,MAAA,KAAI,CAAC,iBAAL,GAAsB,QAAA,CAAA,EAAA,EAAQ,KAAI,CAAC,iBAAb,GAA8B,EAAA,GAAA,EAAA,EAAA,EAAA,CAAG,IAAH,CAAA,GAAc,aAAa,CAAA,MAAb,CAAa,CAAE,SAAF,CAAb,CAAd,EAAsC,EAApE,EAAtB;;AAEA,MAAA,KAAI,CAAC,sBAAL;;AAEA,aAAO,YAAA;eAAA,CACH;;;AACA,YAAI,KAAI,CAAC,UAAT,EAAqB;AACjB;AACH;;AAED,YAAM,aAAa,GAAO,CAAC,KAAI,CAAC,iBAAL,CAAuB,IAAvB,KAAgC,EAAjC,EAAoC,KAApC,EAA1B;AACA,YAAM,uBAAuB,GAAG,OAAO,CAAC,aAAa,CAAC,SAAD,CAAd,CAAvC;AAEA,QAAA,aAAa,CAAC,SAAD,CAAb,GAA2B,SAA3B;AAEA,QAAA,KAAI,CAAC,iBAAL,GAAsB,QAAA,CAAA,EAAA,EAAQ,KAAI,CAAC,iBAAb,GAA8B,EAAA,GAAA,EAAA,EAAA,EAAA,CAAG,IAAH,CAAA,GAAU,aAAV,EAAuB,EAArD,EAAtB;;AAEA,YAAI,uBAAJ,EAA6B;AACzB,UAAA,KAAI,CAAC,sBAAL;AACH;AACJ,OAhBD;AAiBH,KA5BD;AA8BA;;;;;AAGA,IAAA,KAAA,CAAA,WAAA,GAAc,UAAC,MAAD,EAAsB;AAChC,aAAO,CAAC,MAAM,CAAC,IAAP,CAAY,MAAZ,EAAoB,IAApB,CAAyB,UAAA,SAAA,EAAS;AAAI,eAAA,OAAO,CAAC,MAAM,CAAd,SAAc,CAAP,CAAP;AAA0B,OAAhE,CAAR;AACH,KAFD;AAIA;;;;;AAGA,IAAA,KAAA,CAAA,cAAA,GAAiB,UAAC,QAAD,EAA8B,MAA9B,EAA8C;AAC3D,aAAO,MAAM,CAAC,IAAP,CAAY,UAAA,SAAA,EAAS;AAAI,eAAA,QAAQ,CAAR,SAAQ,CAAR;AAAmB,OAA5C,CAAP;AACH,KAFD;AAIA;;;;;AAGA,IAAA,KAAA,CAAA,mBAAA,GAAsB,UAAC,OAAD,EAA6B,MAA7B,EAA6C;AAC/D,aAAO,MAAM,CAAC,IAAP,CAAY,UAAA,SAAA,EAAS;AAAI,eAAA,CAAC,OAAO,CAAR,SAAQ,CAAR;AAAmB,OAA5C,CAAP;AACH,KAFD;AAIA;;;;;AAGA,IAAA,KAAA,CAAA,aAAA,GAAgB,UAAC,OAAD,EAA6B,MAA7B,EAA6C;AACzD,aAAO,MAAM,CAAC,IAAP,CAAY,UAAA,SAAA,EAAS;AAAI,eAAA,OAAO,CAAP,SAAO,CAAP;AAAkB,OAA3C,CAAP;AACH,KAFD;AAIA;;;;;AAGA,IAAA,KAAA,CAAA,aAAA,GAAgB,UAAC,OAAD,EAA6B,MAA7B,EAA6C;AACzD,aAAO,MAAM,CAAC,IAAP,CAAY,UAAA,SAAA,EAAS;AAAI,eAAA,OAAO,CAAP,SAAO,CAAP;AAAkB,OAA3C,CAAP;AACH,KAFD;AAIA;;;;;AAGA,IAAA,KAAA,CAAA,WAAA,GAAc,UAAC,SAAD,EAAkB;AAC5B,aAAO,MAAM,CAAC,SAAD,CAAN,CAAkB,KAAI,CAAC,MAAvB,CAAP;AACH,KAFD;AAIA;;;;;AAGA,IAAA,KAAA,CAAA,WAAA,GAAc,UAAC,SAAD,EAAoB,KAApB,EAA8B;AACxC,aAAO,MAAM,CAAC,SAAD,CAAN,CAAkB,KAAI,CAAC,MAAvB,EAA+B,KAA/B,CAAP;AACH,KAFD;AAIA;;;;;AAGA,IAAA,KAAA,CAAA,aAAA,GAAgB,UAAC,IAAD,EAAa;;;AACzB,MAAA,KAAI,CAAC,QAAL,CAAc,IAAd;;AAEA,UAAI,CAAC,KAAI,CAAC,QAAL,CAAc,IAAd,CAAL,EAA0B;AACtB,QAAA,KAAI,CAAC,QAAL,GAAa,QAAA,CAAA,EAAA,EAAQ,KAAI,CAAC,QAAb,GAAqB,EAAA,GAAA,EAAA,EAAA,EAAA,CAAG,IAAH,CAAA,GAAU,IAAV,EAAc,EAAnC,EAAb;AACH;;AAED,MAAA,KAAI,CAAC,MAAL,CAAY,IAAZ,EAAkB,IAAlB;AACH,KARD;AAUA;;;;;AAGA,IAAA,KAAA,CAAA,QAAA,GAAW,UAAC,IAAD,EAAe,OAAf,EAAmD;AAC1D,MAAA,KAAI,CAAC,aAAL,CAAmB,IAAnB;;AAEA,UAAM,QAAQ,GAAO,CAAC,KAAI,CAAC,WAAL,CAAiB,IAAjB,KAA0B,EAA3B,EAA8B,KAA9B,EAArB;AAEA,MAAA,QAAQ,CAAC,MAAT,CAAgB,OAAO,CAAC,KAAxB,EAA+B,CAA/B,EAAkC,OAAO,CAAC,KAA1C;;AAEA,MAAA,KAAI,CAAC,WAAL,CAAiB,IAAjB,EAAuB,QAAvB;;AACA,MAAA,KAAI,CAAC,WAAL;AACH,KATD;AAWA;;;;;AAGA,IAAA,KAAA,CAAA,SAAA,GAAY,UAAC,IAAD,EAAe,OAAf,EAAoC;AAC5C,MAAA,KAAI,CAAC,QAAL,CAAc,IAAd,EAAoB;AAChB,QAAA,KAAK,EAAE,OAAO,CAAC,KADC;AAEhB,QAAA,KAAK,EAAE;AAFS,OAApB;AAIH,KALD;AAOA;;;;;AAGA,IAAA,KAAA,CAAA,MAAA,GAAS,UAAC,IAAD,EAAe,OAAf,EAAoC;AACzC,MAAA,KAAI,CAAC,aAAL,CAAmB,IAAnB;;AAEA,UAAM,QAAQ,GAAO,CAAC,KAAI,CAAC,WAAL,CAAiB,IAAjB,KAA0B,EAA3B,EAA8B,MAA9B,CAA8B,CAAE,OAAO,CAAC,KAAV,CAA9B,CAArB;;AAEA,MAAA,KAAI,CAAC,WAAL,CAAiB,IAAjB,EAAuB,QAAvB;;AACA,MAAA,KAAI,CAAC,WAAL;AACH,KAPD;AASA;;;;;AAGA,IAAA,KAAA,CAAA,KAAA,GAAQ,UAAC,IAAD,EAAa;AACjB,MAAA,KAAI,CAAC,aAAL,CAAmB,IAAnB;;AAEA,UAAM,QAAQ,GAAO,CAAC,KAAI,CAAC,WAAL,CAAiB,IAAjB,KAA0B,EAA3B,EAA8B,KAA9B,EAArB;AACA,UAAM,KAAK,GAAG,QAAQ,CAAC,GAAT,EAAd;;AAEA,MAAA,KAAI,CAAC,WAAL,CAAiB,IAAjB,EAAuB,QAAvB;;AACA,MAAA,KAAI,CAAC,WAAL;;AAEA,aAAO,KAAP;AACH,KAVD;AAYA;;;;;AAGA,IAAA,KAAA,CAAA,QAAA,GAAW,UAAC,IAAD,EAAe,OAAf,EAAuC;AAC9C,MAAA,KAAI,CAAC,aAAL,CAAmB,IAAnB;;AAEA,UAAM,QAAQ,GAAO,CAAC,KAAI,CAAC,WAAL,CAAiB,IAAjB,KAA0B,EAA3B,EAA8B,KAA9B,EAArB;AACA,UAAM,KAAK,GAAG,QAAQ,CAAC,MAAT,CAAgB,OAAO,CAAC,KAAxB,EAA+B,CAA/B,CAAd;;AAEA,MAAA,KAAI,CAAC,WAAL,CAAiB,IAAjB,EAAuB,QAAvB;;AACA,MAAA,KAAI,CAAC,WAAL;;AAEA,aAAO,KAAP;AACH,KAVD;AAYA;;;;;AAGA,IAAA,KAAA,CAAA,SAAA,GAAY,UAAC,IAAD,EAAe,OAAf,EAAmD;AAC3D,MAAA,KAAI,CAAC,aAAL,CAAmB,IAAnB;;AAEA,UAAM,QAAQ,GAAO,CAAC,KAAI,CAAC,WAAL,CAAiB,IAAjB,KAA0B,EAA3B,EAA8B,KAA9B,EAArB;AAEA,MAAA,QAAQ,CAAC,MAAT,CAAgB,OAAO,CAAC,KAAxB,EAA+B,CAA/B,EAAkC,OAAO,CAAC,KAA1C;;AAEA,MAAA,KAAI,CAAC,WAAL,CAAiB,IAAjB,EAAuB,QAAvB;;AACA,MAAA,KAAI,CAAC,WAAL;AACH,KATD;AAWA;;;;;AAGA,IAAA,KAAA,CAAA,MAAA,GAAS,UAAC,IAAD,EAAe,OAAf,EAA8D;AACnE,MAAA,KAAI,CAAC,aAAL,CAAmB,IAAnB;;AAEA,UAAM,QAAQ,GAAO,CAAC,KAAI,CAAC,WAAL,CAAiB,IAAjB,KAA0B,EAA3B,EAA8B,KAA9B,EAArB;AAEA,UAAM,KAAK,GAAG,QAAQ,CAAC,OAAO,CAAC,SAAT,CAAtB;AAEA,MAAA,QAAQ,CAAC,MAAT,CAAgB,OAAO,CAAC,SAAxB,EAAmC,CAAnC;AACA,MAAA,QAAQ,CAAC,MAAT,CAAgB,OAAO,CAAC,SAAxB,EAAmC,CAAnC,EAAsC,KAAtC;;AAEA,MAAA,KAAI,CAAC,WAAL,CAAiB,IAAjB,EAAuB,QAAvB;;AACA,MAAA,KAAI,CAAC,WAAL;AACH,KAZD;;AA1VI,IAAA,KAAI,CAAC,MAAL,GAAc,KAAK,CAAC,KAAK,CAAC,aAAP,CAAnB;;AACH;;AAnID,EAAA,MAAA,CAAA,cAAA,CAAI,IAAA,CAAA,SAAJ,EAAI,SAAJ,EAAW;AAHX;;;SAGA,eAAA;AACI,aAAO,KAAK,QAAZ;AACH,KAFU;;AAGX;;;SAGA,aAAY,KAAZ,EAAoC;AAChC,WAAK,QAAL,GAAgB,KAAhB;AACH,KARU;oBAAA;;AAAA,GAAX;AAaA,EAAA,MAAA,CAAA,cAAA,CAAI,IAAA,CAAA,SAAJ,EAAI,SAAJ,EAAW;AAHX;;;SAGA,eAAA;AACI,aAAO,KAAK,QAAZ;AACH,KAFU;;AAGX;;;SAGA,aAAY,KAAZ,EAAoC;AAChC,WAAK,QAAL,GAAgB,KAAhB;AACH,KARU;oBAAA;;AAAA,GAAX;AAaA,EAAA,MAAA,CAAA,cAAA,CAAI,IAAA,CAAA,SAAJ,EAAI,UAAJ,EAAY;AAHZ;;;SAGA,eAAA;AACI,aAAO,KAAK,SAAZ;AACH,KAFW;;AAGZ;;;SAGA,aAAa,KAAb,EAAqC;AACjC,WAAK,SAAL,GAAiB,KAAjB;AACH,KARW;oBAAA;;AAAA,GAAZ;AAaA,EAAA,MAAA,CAAA,cAAA,CAAI,IAAA,CAAA,SAAJ,EAAI,mBAAJ,EAAqB;AAHrB;;;SAGA,eAAA;AACI,aAAO,KAAK,kBAAZ;AACH,KAFoB;;AAGrB;;;SAGA,aAAsB,KAAtB,EAAgG;AAC5F,WAAK,kBAAL,GAA0B,KAA1B;AACH,KARoB;oBAAA;;AAAA,GAArB;AAaA,EAAA,MAAA,CAAA,cAAA,CAAI,IAAA,CAAA,SAAJ,EAAI,QAAJ,EAAU;AAHV;;;SAGA,eAAA;AACI,aAAO,KAAK,OAAZ;AACH,KAFS;;AAGV;;;SAGA,aAAW,KAAX,EAA+B;AAC3B,WAAK,OAAL,GAAe,KAAf;AACH,KARS;oBAAA;;AAAA,GAAV;AAaA,EAAA,MAAA,CAAA,cAAA,CAAI,IAAA,CAAA,SAAJ,EAAI,QAAJ,EAAU;AAHV;;;SAGA,eAAA;AACI,aAAO,MAAM,CAAC,IAAP,CAAY,KAAK,OAAjB,CAAP;AACH,KAFS;oBAAA;;AAAA,GAAV;AAOA,EAAA,MAAA,CAAA,cAAA,CAAI,IAAA,CAAA,SAAJ,EAAI,YAAJ,EAAc;AAHd;;;SAGA,eAAA;AACI,UAAI,KAAK,KAAL,CAAW,SAAf,EAA0B;AACtB,eAAO,KAAK,KAAL,CAAW,SAAX,CAAqB,KAAK,MAA1B,EAAkC,KAAK,WAAvC,CAAP;AACH;AACJ,KAJa;oBAAA;;AAAA,GAAd;AASA,EAAA,MAAA,CAAA,cAAA,CAAI,IAAA,CAAA,SAAJ,EAAI,QAAJ,EAAU;AAHV;;;SAGA,eAAA;AAAA,UAAA,KAAA,GAAA,IAAA;;AACI,UAAM,MAAM,GAAQ,EAApB;AACA,UAAM,MAAM,GAAG,KAAK,MAApB;AACA,UAAM,iBAAiB,GAAG,KAAK,iBAA/B;AAEA,MAAA,MAAM,CAAC,OAAP,CAAe,UAAA,SAAA,EAAS;AACpB,QAAA,MAAM,CAAC,SAAD,CAAN,GAAoB,EAApB;;AAEA,YAAI,iBAAiB,CAAC,SAAD,CAArB,EAAkC;AAC9B,cAAM,YAAU,GAAuC,EAAvD;AAEA,UAAA,iBAAiB,CAAC,SAAD,CAAjB,CAA6B,OAA7B,CAAqC,UAAA,SAAA,EAAS;AAC1C,gBAAI,KAAK,CAAC,OAAN,CAAc,SAAd,CAAJ,EAA8B;AAC1B,cAAA,YAAU,CAAC,IAAX,CAAe,KAAf,CAAA,YAAA,EAAmB,SAAnB;AACH,aAFD,MAEO;AACH,cAAA,YAAU,CAAC,IAAX,CAAgB,SAAhB;AACH;AACJ,WAND,EAH8B,CAW9B;;AACA,UAAA,YAAU,CAAC,IAAX,CAAgB,UAAC,SAAD,EAAU;AACtB,gBAAI,SAAJ,EAAe;AACX,kBAAM,MAAM,GAAG,SAAS,CAAC,KAAI,CAAC,WAAL,CAAiB,SAAjB,CAAD,EAA8B,KAAI,CAAC,WAAnC,EAAgD;AAAC,gBAAA,IAAI,EAAE;AAAP,eAAhD,CAAxB;;AAEA,kBAAI,MAAJ,EAAY;AACR,gBAAA,MAAM,CAAC,SAAD,CAAN,GAAoB,MAApB;AACA,uBAAO,IAAP;AACH;AACJ;;AAED,mBAAO,KAAP;AACH,WAXD;AAYH;AACJ,OA5BD;AA8BA,UAAM,UAAU,GAAG,KAAK,UAAxB;;AAEA,UAAI,UAAJ,EAAgB;AACZ,QAAA,WAAW,CAAC,KAAK,UAAN,EAAkB,MAAlB,CAAX;AACH;;AAED,aAAO,MAAP;AACH,KA1CS;oBAAA;;AAAA,GAAV;AAoDA;;;;AAGA,EAAA,IAAA,CAAA,SAAA,CAAA,oBAAA,GAAA,YAAA;AACI,SAAK,UAAL,GAAkB,IAAlB;;AAEA,QAAI,KAAK,mBAAT,EAA8B;AAC1B,MAAA,YAAY,CAAC,KAAK,mBAAN,CAAZ;AACH;AACJ,GAND;AAkWA;;;;;AAGA,EAAA,IAAA,CAAA,SAAA,CAAA,MAAA,GAAA,YAAA;AACY,QAAA,MAAA,GAAA,KAAA,KAAA,CAAA,MAAA;AAER,QAAM,OAAO,GAAG,KAAK,OAArB;AACA,QAAM,OAAO,GAAG,KAAK,OAArB;AACA,QAAM,QAAQ,GAAG,KAAK,QAAtB;AACA,QAAM,MAAM,GAAG,KAAK,MAApB;AACA,QAAM,MAAM,GAAG,KAAK,MAApB;AAEA,QAAM,SAAS,GAAG,KAAK,WAAL,CAAiB,MAAjB,CAAlB;AACA,QAAM,YAAY,GAAG,KAAK,cAAL,CAAoB,QAApB,EAA8B,MAA9B,CAArB;AACA,QAAM,WAAW,GAAY,KAAK,aAAL,CAAmB,OAAnB,EAA4B,MAA5B,CAA7B;AACA,QAAM,WAAW,GAAY,KAAK,aAAL,CAAmB,OAAnB,EAA4B,MAA5B,CAA7B;AACA,QAAM,iBAAiB,GAAG,KAAK,mBAAL,CAAyB,OAAzB,EAAkC,MAAlC,CAA1B,CAbJ,CAeI;AACA;;AACA,QAAM,WAAW,GAAI,iBAAiB,IAAI,CAAC,SAAvB,IAAsC,SAAS,IAAI,YAAvE;AAEA,WACI,KAAA,CAAA,aAAA,CAAC,WAAW,CAAC,QAAb,EAAqB;AACjB,MAAA,GAAG,EAAE,KAAK,GADO;AAEjB,MAAA,KAAK,EAAE;AACH,QAAA,EAAE,EAAE,KAAK,GADN;AAEH,QAAA,WAAW,EAAE,KAAK,WAFf;AAGH,QAAA,MAAM,EAAA,MAHH;AAIH,QAAA,QAAQ,EAAA,QAJL;AAKH,QAAA,OAAO,EAAA,OALJ;AAMH,QAAA,OAAO,EAAA,OANJ;AAQH,QAAA,aAAa,EAAE,KAAK,eARjB;AAUH,QAAA,QAAQ,EAAE,KAAK,QAVZ;AAYH,QAAA,QAAQ,EAAE,KAAK,QAZZ;AAaH,QAAA,OAAO,EAAE,KAAK,OAbX;AAcH,QAAA,MAAM,EAAE,KAAK,MAdV;AAgBH,QAAA,SAAS,EAAE,KAAK,SAhBb;AAiBH,QAAA,MAAM,EAAE,KAAK,MAjBV;AAkBH,QAAA,QAAQ,EAAE,KAAK,QAlBZ;AAmBH,QAAA,KAAK,EAAE,KAAK,KAnBT;AAoBH,QAAA,QAAQ,EAAE,KAAK,QApBZ;AAqBH,QAAA,SAAS,EAAE,KAAK,SArBb;AAsBH,QAAA,MAAM,EAAE,KAAK;AAtBV;AAFU,KAArB,EA4BQ,MAAM,CAAC;AACH,MAAA,KAAK,EAAE,SADJ;AAEH,MAAA,QAAQ,EAAE,YAFP;AAGH,MAAA,OAAO,EAAE,WAHN;AAIH,MAAA,OAAO,EAAE,WAJN;AAKH,MAAA,WAAW,EAAE,KAAK,WALf;AAMH,MAAA,MAAM,EAAA,MANH;AAQH,MAAA,WAAW,EAAA,WARR;AAUH,MAAA,QAAQ,EAAE,KAAK,QAVZ;AAWH,MAAA,QAAQ,EAAE,KAAK,QAXZ;AAYH,MAAA,WAAW,EAAE,KAAK;AAZf,KAAD,CA5Bd,CADJ;AA8CH,GAjED;AA7gBA;;;;;AAGO,EAAA,IAAA,CAAA,WAAA,GAAc,gBAAd;AAEP;;;;AAGO,EAAA,IAAA,CAAA,SAAA,GAAY;AACf,IAAA,aAAa,EAAE,SAAS,CAAC,GADV;AAEf,IAAA,QAAQ,EAAE,SAAS,CAAC,IAFL;AAGf,IAAA,aAAa,EAAE,SAAS,CAAC,IAHV;AAIf,IAAA,MAAM,EAAE,SAAS,CAAC,IAAV,CAAe;AAJR,GAAZ;AAukBX,SAAA,IAAA;AAAC,CAhlBD,CAA0B,KAAK,CAAC,SAAhC,CAAA;;SAAa,I","sourceRoot":"","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { FormContext } from './FormContext';\nimport { getter, setter, clone, cloneObject, guid } from '@progress/kendo-react-common';\n/**\n * @hidden\n */\nvar FORCEUPDATE_ACCUMULATOR_TIMEOUT = 0;\n/**\n * Represents the [KendoReact Form component]({% slug overview_form %}).\n *\n * @example\n * ```jsx\n * export const FormInput = (fieldRenderProps) => {\n *     const onValueChange = React.useCallback(\n *         (event) => fieldRenderProps.onChange(event.target.value),\n *         [fieldRenderProps.onChange]\n *     );\n *     return (\n *         <input\n *             className={'k-textbox'}\n *             value={fieldRenderProps.value}\n *             onChange={onValueChange}\n *         />\n *     );\n * };\n *\n * export const App = () => {\n *     const handleSubmit = (dataItem) => alert(JSON.stringify(dataItem));\n *     return (\n *         <Form\n *             initialValues={{title: ''}}\n *             onSubmit={handleSubmit}\n *             render={(formRenderProps) => (\n *                 <div>\n *                     <Field name={'title'} component={FormInput} />\n *                     <button\n *                         className=\"k-button\"\n *                         disabled={!formRenderProps.allowSubmit}\n *                         onClick={formRenderProps.onSubmit}\n *                     >\n *                         Submit\n *                     </button>\n *                 </div>\n *             )}\n *         />\n *     );\n * };\n *\n * ReactDOM.render(<App />, document.querySelector('my-app'));\n * ```\n */\nvar Form = /** @class */ (function (_super) {\n    __extends(Form, _super);\n    /**\n     * @hidden\n     */\n    function Form(props) {\n        var _this = _super.call(this, props) || this;\n        _this._id = guid();\n        _this._touched = {};\n        _this._visited = {};\n        _this._modified = {};\n        _this._validatorsByField = {};\n        _this._values = {};\n        _this._fields = {};\n        _this._unmounted = false;\n        /**\n         * @hidden\n         */\n        _this.isValid = function () {\n            return _this.isFormValid(_this.errors);\n        };\n        /**\n         * @hidden\n         */\n        _this.accumulatedForceUpdate = function () {\n            // IMPORTANT:\n            // Should only be used for updates not comming from editors as it\n            // will cause cursor jump as react will reset the editor to old value\n            if (_this._accumulatorTimeout) {\n                clearTimeout(_this._accumulatorTimeout);\n            }\n            _this._accumulatorTimeout = setTimeout(function () {\n                _this._accumulatorTimeout = undefined;\n                _this.forceUpdate();\n            }, FORCEUPDATE_ACCUMULATOR_TIMEOUT);\n        };\n        /**\n         * @hidden\n         */\n        _this.resetForm = function () {\n            _this.values = clone(_this.props.initialValues);\n            _this._id = guid();\n            _this._touched = {};\n            _this._visited = {};\n            _this._modified = {};\n            _this._validatorsByField = {};\n            _this._fields = {};\n            _this.forceUpdate();\n        };\n        /**\n         * Method for resetting the form state outside the form component.\n         *\n         * > Use `onReset` only if you cannot achieve the desired behavior through the Field component or by FormRenderProps.\n         */\n        _this.onReset = function () { return _this.resetForm(); };\n        /**\n         * @hidden\n         */\n        _this.addField = function (field) {\n            _this._fields[field] = true;\n        };\n        /**\n         * @hidden\n         */\n        _this.onSubmit = function (event) {\n            var touchedVisited = {};\n            var fields = _this.fields;\n            if (event) {\n                if (typeof event.preventDefault === 'function') {\n                    event.preventDefault();\n                }\n                if (typeof event.stopPropagation === 'function') {\n                    event.stopPropagation();\n                }\n            }\n            fields.forEach(function (fieldName) {\n                touchedVisited[fieldName] = true;\n            });\n            // show validations\n            _this.visited = __assign({}, touchedVisited);\n            _this.touched = __assign({}, touchedVisited);\n            var values = _this.values;\n            var isValid = _this.isFormValid(_this.errors);\n            var isModified = _this.isFormModified(_this.modified, fields);\n            // TODO: introduce form state prop 'submitted'\n            if (_this.props.onSubmitClick) {\n                _this.props.onSubmitClick.call(undefined, {\n                    values: values,\n                    isValid: isValid,\n                    isModified: isModified,\n                    event: event\n                });\n            }\n            if (isValid && isModified && _this.props.onSubmit) {\n                _this.props.onSubmit.call(undefined, values, event);\n            }\n            _this.forceUpdate();\n        };\n        /**\n         * Method for emiting changes to a specific field outside the form component.\n         *\n         * > Use `onChange` only if you cannot achieve the desired behavior through the Field component by FormRenderProps.\n         */\n        _this.onChange = function (name, options) {\n            var _a;\n            var value = options.value;\n            _this.addField(name);\n            if (!_this.modified[name]) {\n                _this.modified = __assign({}, _this.modified, (_a = {}, _a[name] = true, _a));\n            }\n            _this.onBlur(name, true);\n            _this.valueSetter(name, value);\n            _this.forceUpdate();\n        };\n        /**\n         * @hidden\n         */\n        _this.onFocus = function (name, skipForceUpdate) {\n            var _a;\n            if (_this.visited[name]) {\n                return;\n            }\n            _this.visited = __assign({}, _this.visited, (_a = {}, _a[name] = true, _a));\n            if (!skipForceUpdate) {\n                _this.forceUpdate();\n            }\n        };\n        /**\n         * @hidden\n         */\n        _this.onBlur = function (name, skipForceUpdate) {\n            var _a;\n            if (_this.touched[name]) {\n                return;\n            }\n            _this.onFocus(name, skipForceUpdate);\n            _this.touched = __assign({}, _this.touched, (_a = {}, _a[name] = true, _a));\n            if (!skipForceUpdate) {\n                _this.forceUpdate();\n            }\n        };\n        /**\n         * @hidden\n         */\n        _this.onFieldRegister = function (name, validator) {\n            var _a;\n            _this.addField(name);\n            // The sole reason for using class props over state - nextIndex, needed for destroying validators\n            var oldValidators = (_this.validatorsByField[name] || []);\n            var nextIndex = oldValidators.length;\n            _this.validatorsByField = __assign({}, _this.validatorsByField, (_a = {}, _a[name] = oldValidators.concat([validator]), _a));\n            _this.accumulatedForceUpdate();\n            return function () {\n                var _a;\n                // onFieldUnregister:\n                if (_this._unmounted) {\n                    return;\n                }\n                var newValidators = (_this.validatorsByField[name] || []).slice();\n                var validatorIsUnregistered = Boolean(newValidators[nextIndex]);\n                newValidators[nextIndex] = undefined;\n                _this.validatorsByField = __assign({}, _this.validatorsByField, (_a = {}, _a[name] = newValidators, _a));\n                if (validatorIsUnregistered) {\n                    _this.accumulatedForceUpdate();\n                }\n            };\n        };\n        /**\n         * @hidden\n         */\n        _this.isFormValid = function (errors) {\n            return !Object.keys(errors).some(function (fieldName) { return Boolean(errors[fieldName]); });\n        };\n        /**\n         * @hidden\n         */\n        _this.isFormModified = function (modified, fields) {\n            return fields.some(function (fieldName) { return modified[fieldName]; });\n        };\n        /**\n         * @hidden\n         */\n        _this.isFormHasNotTouched = function (touched, fields) {\n            return fields.some(function (fieldName) { return !touched[fieldName]; });\n        };\n        /**\n         * @hidden\n         */\n        _this.isFormTouched = function (touched, fields) {\n            return fields.some(function (fieldName) { return touched[fieldName]; });\n        };\n        /**\n         * @hidden\n         */\n        _this.isFormVisited = function (visited, fields) {\n            return fields.some(function (fieldName) { return visited[fieldName]; });\n        };\n        /**\n         * @hidden\n         */\n        _this.valueGetter = function (fieldName) {\n            return getter(fieldName)(_this.values);\n        };\n        /**\n         * @hidden\n         */\n        _this.valueSetter = function (fieldName, value) {\n            return setter(fieldName)(_this.values, value);\n        };\n        /**\n         * @hidden\n         */\n        _this.onArrayAction = function (name) {\n            var _a;\n            _this.addField(name);\n            if (!_this.modified[name]) {\n                _this.modified = __assign({}, _this.modified, (_a = {}, _a[name] = true, _a));\n            }\n            _this.onBlur(name, true);\n        };\n        /**\n         * @hidden\n         */\n        _this.onInsert = function (name, options) {\n            _this.onArrayAction(name);\n            var newArray = (_this.valueGetter(name) || []).slice();\n            newArray.splice(options.index, 0, options.value);\n            _this.valueSetter(name, newArray);\n            _this.forceUpdate();\n        };\n        /**\n         * @hidden\n         */\n        _this.onUnshift = function (name, options) {\n            _this.onInsert(name, {\n                value: options.value,\n                index: 0\n            });\n        };\n        /**\n         * @hidden\n         */\n        _this.onPush = function (name, options) {\n            _this.onArrayAction(name);\n            var newArray = (_this.valueGetter(name) || []).concat([options.value]);\n            _this.valueSetter(name, newArray);\n            _this.forceUpdate();\n        };\n        /**\n         * @hidden\n         */\n        _this.onPop = function (name) {\n            _this.onArrayAction(name);\n            var newArray = (_this.valueGetter(name) || []).slice();\n            var value = newArray.pop();\n            _this.valueSetter(name, newArray);\n            _this.forceUpdate();\n            return value;\n        };\n        /**\n         * @hidden\n         */\n        _this.onRemove = function (name, options) {\n            _this.onArrayAction(name);\n            var newArray = (_this.valueGetter(name) || []).slice();\n            var value = newArray.splice(options.index, 1);\n            _this.valueSetter(name, newArray);\n            _this.forceUpdate();\n            return value;\n        };\n        /**\n         * @hidden\n         */\n        _this.onReplace = function (name, options) {\n            _this.onArrayAction(name);\n            var newArray = (_this.valueGetter(name) || []).slice();\n            newArray.splice(options.index, 1, options.value);\n            _this.valueSetter(name, newArray);\n            _this.forceUpdate();\n        };\n        /**\n         * @hidden\n         */\n        _this.onMove = function (name, options) {\n            _this.onArrayAction(name);\n            var newArray = (_this.valueGetter(name) || []).slice();\n            var value = newArray[options.prevIndex];\n            newArray.splice(options.prevIndex, 1);\n            newArray.splice(options.nextIndex, 0, value);\n            _this.valueSetter(name, newArray);\n            _this.forceUpdate();\n        };\n        _this.values = clone(props.initialValues);\n        return _this;\n    }\n    Object.defineProperty(Form.prototype, \"touched\", {\n        /**\n         * @hidden\n         */\n        get: function () {\n            return this._touched;\n        },\n        /**\n         * @hidden\n         */\n        set: function (value) {\n            this._touched = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Form.prototype, \"visited\", {\n        /**\n         * @hidden\n         */\n        get: function () {\n            return this._visited;\n        },\n        /**\n         * @hidden\n         */\n        set: function (value) {\n            this._visited = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Form.prototype, \"modified\", {\n        /**\n         * @hidden\n         */\n        get: function () {\n            return this._modified;\n        },\n        /**\n         * @hidden\n         */\n        set: function (value) {\n            this._modified = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Form.prototype, \"validatorsByField\", {\n        /**\n         * @hidden\n         */\n        get: function () {\n            return this._validatorsByField;\n        },\n        /**\n         * @hidden\n         */\n        set: function (value) {\n            this._validatorsByField = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Form.prototype, \"values\", {\n        /**\n         * @hidden\n         */\n        get: function () {\n            return this._values;\n        },\n        /**\n         * @hidden\n         */\n        set: function (value) {\n            this._values = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Form.prototype, \"fields\", {\n        /**\n         * @hidden\n         */\n        get: function () {\n            return Object.keys(this._fields);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Form.prototype, \"formErrors\", {\n        /**\n         * @hidden\n         */\n        get: function () {\n            if (this.props.validator) {\n                return this.props.validator(this.values, this.valueGetter);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Form.prototype, \"errors\", {\n        /**\n         * @hidden\n         */\n        get: function () {\n            var _this = this;\n            var errors = {};\n            var fields = this.fields;\n            var validatorsByField = this.validatorsByField;\n            fields.forEach(function (fieldName) {\n                errors[fieldName] = '';\n                if (validatorsByField[fieldName]) {\n                    var validators_1 = [];\n                    validatorsByField[fieldName].forEach(function (validator) {\n                        if (Array.isArray(validator)) {\n                            validators_1.push.apply(validators_1, validator);\n                        }\n                        else {\n                            validators_1.push(validator);\n                        }\n                    });\n                    // find first validation error\n                    validators_1.find(function (validator) {\n                        if (validator) {\n                            var result = validator(_this.valueGetter(fieldName), _this.valueGetter, { name: fieldName });\n                            if (result) {\n                                errors[fieldName] = result;\n                                return true;\n                            }\n                        }\n                        return false;\n                    });\n                }\n            });\n            var formErrors = this.formErrors;\n            if (formErrors) {\n                cloneObject(this.formErrors, errors);\n            }\n            return errors;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @hidden\n     */\n    Form.prototype.componentWillUnmount = function () {\n        this._unmounted = true;\n        if (this._accumulatorTimeout) {\n            clearTimeout(this._accumulatorTimeout);\n        }\n    };\n    /**\n     * @hidden\n     */\n    Form.prototype.render = function () {\n        var render = this.props.render;\n        var touched = this.touched;\n        var visited = this.visited;\n        var modified = this.modified;\n        var fields = this.fields;\n        var errors = this.errors;\n        var formValid = this.isFormValid(errors);\n        var formModified = this.isFormModified(modified, fields);\n        var formTouched = this.isFormTouched(touched, fields);\n        var formVisited = this.isFormVisited(visited, fields);\n        var formHasNotTouched = this.isFormHasNotTouched(touched, fields);\n        // 1. The form is not touched, but has errors - allow submit to force validation.\n        // 2. The form is valid and modified - if not modified, disable submit.\n        var allowSubmit = (formHasNotTouched && !formValid) || (formValid && formModified);\n        return (React.createElement(FormContext.Provider, { key: this._id, value: {\n                id: this._id,\n                valueGetter: this.valueGetter,\n                errors: errors,\n                modified: modified,\n                touched: touched,\n                visited: visited,\n                registerField: this.onFieldRegister,\n                onSubmit: this.onSubmit,\n                onChange: this.onChange,\n                onFocus: this.onFocus,\n                onBlur: this.onBlur,\n                onUnshift: this.onUnshift,\n                onPush: this.onPush,\n                onInsert: this.onInsert,\n                onPop: this.onPop,\n                onRemove: this.onRemove,\n                onReplace: this.onReplace,\n                onMove: this.onMove\n            } }, render({\n            valid: formValid,\n            modified: formModified,\n            touched: formTouched,\n            visited: formVisited,\n            valueGetter: this.valueGetter,\n            errors: errors,\n            allowSubmit: allowSubmit,\n            onChange: this.onChange,\n            onSubmit: this.onSubmit,\n            onFormReset: this.resetForm\n        })));\n    };\n    /**\n     * @hidden\n     */\n    Form.displayName = 'KendoReactForm';\n    /**\n     * @hidden\n     */\n    Form.propTypes = {\n        initialValues: PropTypes.any,\n        onSubmit: PropTypes.func,\n        onSubmitClick: PropTypes.func,\n        render: PropTypes.func.isRequired\n    };\n    return Form;\n}(React.Component));\nexport { Form };\n//# sourceMappingURL=Form.js.map"]},"metadata":{},"sourceType":"module"}