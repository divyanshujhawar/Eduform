{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\divya\\\\OneDrive\\\\Desktop\\\\Amplify\\\\Eduform\\\\src\\\\components\\\\admin\\\\AddNewCourse.js\";\nimport React, { Component } from 'react';\nimport AdminNavBar from './AdminNavBar.js';\n\nclass AddNewCourse extends Component {\n  //const [courseName, setCourseName] = React.useState(\"\");\n  //const [instructorEmail, setInstructorEmail] = React.useState(\"\");\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      event.preventDefault();\n      const {\n        name,\n        value\n      } = event.target;\n      let errors = this.state.errors;\n      this.state[name] = value;\n\n      switch (name) {\n        case 'courseCode':\n          errors.courseCode = value.length === 0 ? 'This cannot be empty' : '';\n          break;\n\n        case 'courseName':\n          errors.courseName = value.length === 0 ? 'This cannot be empty' : '';\n          break;\n\n        case 'courseDescription':\n          errors.courseDescription = value.length === 0 ? 'This cannot be empty' : '';\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        errors,\n        [name]: value\n      });\n    };\n\n    this.state = {\n      courseCode: null,\n      courseName: null,\n      courseDescription: null,\n      courseRequest: {},\n      errors: {\n        courseCode: '',\n        courseName: '',\n        courseDescription: ''\n      }\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.addCourse = this.addCourse.bind(this);\n  }\n\n  async addCourse(event) {\n    event.preventDefault();\n    this.setState({\n      courseCode: document.getElementById(\"courseCode\").value\n    });\n    this.setState({\n      courseName: document.getElementById(\"courseName\").value\n    });\n    this.setState({\n      courseDescription: document.getElementById(\"courseDescription\").value\n    });\n    this.state.courseRequest.courseCode = this.state.courseCode;\n    this.state.courseRequest.courseName = this.state.courseName;\n    this.state.courseRequest.courseDescription = this.state.courseDescription;\n    console.log(\"CourseRequest: \", this.state.courseRequest);\n\n    try {\n      const response = await fetch('/admin/addCourse', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify(this.state.courseRequest)\n      }).then(res => res.text()).then(text => {\n        if (text === \"SUCCESS!\") {\n          document.getElementById(\"course-form\").reset();\n          alert('Course successfully added');\n        } else {\n          alert(text);\n        }\n      });\n    } catch (error) {\n      alert(error);\n    }\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.setState({\n      courseCode: document.getElementById(\"courseCode\").value\n    });\n    this.setState({\n      courseName: document.getElementById(\"courseName\").value\n    });\n    this.setState({\n      courseDescription: document.getElementById(\"courseDescription\").value\n    });\n    console.log(this.state.errors);\n    let vars = [\"courseCode\", \"courseName\", \"courseDescription\"];\n    var i;\n    let errorCount = 0;\n\n    for (i = 0; i < vars.length; i++) {\n      if (document.getElementById(vars[i]).value.length === 0) {\n        this.state.errors[vars[i]] = \"This cannot be empty\";\n        errorCount += 1;\n      }\n    }\n\n    if (errorCount > 0) {\n      return;\n    } else {\n      this.addCourse(event);\n    }\n  }\n\n  render() {\n    const {\n      errors\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"backGroundSAT\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(AdminNavBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        paddingTop: '4%',\n        paddingBottom: '2%'\n      },\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        paddingRight: '2%',\n        paddingLeft: '2%'\n      },\n      className: \"row myIntro\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        padding: '0% 3% 1% 3%',\n        paddingTop: '2%'\n      },\n      className: \"col-lg-5 col-md-7 bg-black myLogIn text-primarys\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      id: \"course-form\",\n      onSubmit: this.handleSubmit,\n      noValidate: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"welcome\",\n      style: {\n        marginTop: '1.5%',\n        fontSize: '2.5rem',\n        paddingBottom: '10px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 33\n      }\n    }, \" Add New Course \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"courseCode\",\n      name: \"courseCode\",\n      className: \"form-control\",\n      placeholder: \"Enter course code\",\n      style: {\n        fontSize: '.9rem'\n      },\n      onChange: this.handleChange,\n      noValidate: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 37\n      }\n    }), errors.courseCode.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 70\n      }\n    }, errors.courseCode)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"courseName\",\n      name: \"courseName\",\n      className: \"form-control\",\n      placeholder: \"Enter course name\",\n      style: {\n        fontSize: '.9rem'\n      },\n      onChange: this.handleChange,\n      noValidate: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 37\n      }\n    }), errors.courseName.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 70\n      }\n    }, errors.courseName)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"courseDescription\",\n      name: \"courseDescription\",\n      className: \"form-control\",\n      placeholder: \"Enter course description\",\n      style: {\n        fontSize: '.9rem'\n      },\n      onChange: this.handleChange,\n      noValidate: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 37\n      }\n    }), errors.courseDescription.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 77\n      }\n    }, errors.courseDescription)), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-block log\",\n      style: {\n        fontSize: '1.2rem',\n        backgroundColor: '#febf63'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 33\n      }\n    }, \" Add Course \"))))));\n  }\n\n}\n\nexport default AddNewCourse;","map":{"version":3,"sources":["C:/Users/divya/OneDrive/Desktop/Amplify/Eduform/src/components/admin/AddNewCourse.js"],"names":["React","Component","AdminNavBar","AddNewCourse","constructor","props","handleChange","event","preventDefault","name","value","target","errors","state","courseCode","length","courseName","courseDescription","setState","courseRequest","bind","handleSubmit","addCourse","document","getElementById","console","log","response","fetch","method","headers","body","JSON","stringify","then","res","text","reset","alert","error","vars","i","errorCount","render","paddingTop","paddingBottom","paddingRight","paddingLeft","padding","marginTop","fontSize","backgroundColor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport AdminNavBar from './AdminNavBar.js';\r\n\r\n\r\nclass AddNewCourse extends Component {\r\n    //const [courseName, setCourseName] = React.useState(\"\");\r\n    //const [instructorEmail, setInstructorEmail] = React.useState(\"\");\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            courseCode: null,\r\n            courseName: null,\r\n            courseDescription: null,\r\n            courseRequest: {},\r\n            errors:{\r\n                courseCode: '',\r\n                courseName: '',\r\n                courseDescription: ''\r\n            }\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.addCourse = this.addCourse.bind(this);\r\n\r\n    }\r\n\r\n\r\n\r\n    handleChange = (event) => {\r\n        event.preventDefault();\r\n        \r\n        const { name, value } = event.target;\r\n        let errors = this.state.errors;\r\n        this.state[name] = value;\r\n\r\n        switch (name) {\r\n\r\n            case 'courseCode': \r\n                errors.courseCode = \r\n                value.length === 0\r\n                    ? 'This cannot be empty'\r\n                    : '';\r\n                break;\r\n            case 'courseName': \r\n                errors.courseName = \r\n                  value.length === 0\r\n                    ? 'This cannot be empty'\r\n                    : '';\r\n                break;\r\n            case 'courseDescription': \r\n                errors.courseDescription = \r\n                  value.length === 0\r\n                    ? 'This cannot be empty'\r\n                    : '';\r\n                break;\r\n            \r\n            \r\n            default:\r\n                break;\r\n        }\r\n      \r\n        this.setState({errors, [name]: value});\r\n\r\n    }\r\n\r\n    async addCourse(event){    \r\n        \r\n        event.preventDefault();\r\n\r\n        this.setState({courseCode: document.getElementById(\"courseCode\").value});\r\n        this.setState({courseName: document.getElementById(\"courseName\").value});\r\n        this.setState({courseDescription: document.getElementById(\"courseDescription\").value});\r\n\r\n        this.state.courseRequest.courseCode = this.state.courseCode;\r\n        this.state.courseRequest.courseName = this.state.courseName;\r\n        this.state.courseRequest.courseDescription = this.state.courseDescription;\r\n\r\n        console.log(\"CourseRequest: \", this.state.courseRequest);\r\n\r\n        try{\r\n            const response = await fetch('/admin/addCourse', {\r\n                method: 'POST',\r\n                headers: {'Content-Type': 'application/json','Accept': 'application/json'},\r\n                body: JSON.stringify(this.state.courseRequest)\r\n            })\r\n            .then(res => res.text())\r\n            .then(text => {\r\n                \r\n\r\n                if (text === \"SUCCESS!\"){\r\n                    document.getElementById(\"course-form\").reset();\r\n                    alert('Course successfully added');\r\n                } else{\r\n                    alert(text);\r\n                }\r\n                \r\n                \r\n            });\r\n\r\n        } catch (error){\r\n            alert(error);\r\n        }\r\n\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        this.setState({courseCode: document.getElementById(\"courseCode\").value});\r\n        this.setState({courseName: document.getElementById(\"courseName\").value});\r\n        this.setState({courseDescription: document.getElementById(\"courseDescription\").value});\r\n\r\n        console.log(this.state.errors);\r\n        \r\n        let vars = [\"courseCode\",\"courseName\",\"courseDescription\"];\r\n        \r\n        var i;\r\n        let errorCount = 0;\r\n        for (i = 0; i < vars.length; i++) {\r\n\r\n            if(document.getElementById(vars[i]).value.length === 0){\r\n                this.state.errors[vars[i]] = \"This cannot be empty\";\r\n                errorCount += 1;\r\n            }\r\n        }\r\n\r\n\r\n        if (errorCount>0){\r\n            return;\r\n        } else{\r\n        \r\n            this.addCourse(event);\r\n            \r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        const {errors} = this.state;\r\n\r\n        return (\r\n            <div className=\"backGroundSAT\">\r\n                <div >\r\n                    <AdminNavBar />\r\n                </div>\r\n\r\n                <div style={{ paddingTop: '4%', paddingBottom: '2%' }} className=\"container\">\r\n                    <div style={{ paddingRight: '2%', paddingLeft: '2%' }} className=\"row myIntro\">\r\n                        <div style={{ padding: '0% 3% 1% 3%', paddingTop: '2%' }} className=\"col-lg-5 col-md-7 bg-black myLogIn text-primarys\">\r\n                            <form id=\"course-form\" onSubmit={this.handleSubmit} noValidate>\r\n\r\n                                <h1 className=\"welcome\" style={{ marginTop: '1.5%', fontSize: '2.5rem', paddingBottom: '10px' }}> Add New Course </h1>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" id=\"courseCode\" name=\"courseCode\" className=\"form-control\" placeholder=\"Enter course code\" style={{ fontSize: '.9rem' }} onChange={this.handleChange} noValidate />\r\n                                    {errors.courseCode.length > 0 && <span className='error'>{errors.courseCode}</span>}\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" id=\"courseName\" name=\"courseName\" className=\"form-control\" placeholder=\"Enter course name\" style={{ fontSize: '.9rem' }} onChange={this.handleChange} noValidate />\r\n                                    {errors.courseName.length > 0 && <span className='error'>{errors.courseName}</span>}\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" id=\"courseDescription\" name=\"courseDescription\" className=\"form-control\" placeholder=\"Enter course description\" style={{ fontSize: '.9rem' }} onChange={this.handleChange} noValidate />\r\n                                    {errors.courseDescription.length > 0 && <span className='error'>{errors.courseDescription}</span>}\r\n                                </div>\r\n\r\n                                <button type=\"submit\" className=\"btn btn-block log\" style={{ fontSize: '1.2rem', backgroundColor: '#febf63' }}> Add Course </button>\r\n\r\n\r\n\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/*\r\n        <div className='courseForm'>\r\n          <form onSubmit={handleSubmit}>\r\n            <h1>Add new course</h1>\r\n\r\n            <label>\r\n              Course Name:\r\n              <input\r\n                name=\"courseName\"\r\n                type=\"text\"\r\n                value={courseName}\r\n                onChange={e => setCourseName(e.target.value)}\r\n                required />\r\n            </label>\r\n\r\n            <label>\r\n              Instructor Email:\r\n              <input\r\n                name=\"instructorEmail\"\r\n                type=\"email\"\r\n                value={instructorEmail}\r\n                onChange={e => setInstructorEmail(e.target.value)}\r\n                required />\r\n            </label>\r\n\r\n\r\n\r\n            <button>Submit</button>\r\n          </form>\r\n        </div>\r\n\r\n        */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default AddNewCourse; "]},"metadata":{},"sourceType":"module"}